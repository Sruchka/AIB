

&НаКлиенте
//
//
Функция ЭтоНовый()	
	Возврат НЕ ЗначениеЗаполнено(Параметры.Ключ);
КонецФункции

&НаКлиенте
//
//
Процедура УправлениеЭлементамиФормы()
	ТекущийОбъект = ЭтаФорма.Запись;
	флДоступностьОперацийСАрхивами = ТекущийОбъект.АрхивЗагруженВХранилище И НЕ ЭтоНовый();
	Элементы.ДекорацияФайлАрхиваЗагружен.Видимость = флДоступностьОперацийСАрхивами;
	Элементы.СохранитьДвоичныеДанныеАрхиваВКаталог.Доступность = флДоступностьОперацийСАрхивами;
	Элементы.УдалитьДвоичныеДанныеАрхива.Доступность = флДоступностьОперацийСАрхивами;
	Элементы.ЗагрузитьДвоичныеДанныеАрхиваИзФайла.Доступность = НЕ ЭтоНовый() И ЗначениеЗаполнено(ЗадачиНаСервере.ПолучитьЗначениеРеквизита(Запись.РелизОбновления, "Каталог"));
КонецПроцедуры

&НаКлиенте
//
//
Процедура ПриОткрытии(Отказ)
	УправлениеЭлементамиФормы();
КонецПроцедуры

&НаСервере
//
//
Функция ПоместитьДвоичныеДанныеАрхиваВоВременноеХранилищеНаСервере()	
	Адрес = Неопределено;
	ДанныеЗаписи = РегистрыСведений.ХранилищеРелизовОбновлений.ПолучитьПолныеДанныеЗаписи(Запись.РелизОбновления);
	Если ДанныеЗаписи <> Неопределено Тогда
		Если ДанныеЗаписи.Количество() > 0 Тогда 
			ДвоичныеДанныеФайлаАрхива = ДанныеЗаписи.ДвоичныеДанныеФайлаАрхива.Получить();
			Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанныеФайлаАрхива, ЭтаФорма.УникальныйИдентификатор);
		КонецЕсли;
	КонецЕсли;
	Возврат Адрес;
КонецФункции 
	
&НаКлиенте
//
//
Процедура СохранитьДвоичныеДанныеАрхиваВФайл(Команда)
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораКаталога.ПолноеИмяФайла = "";
	ПутьККаталогу = ЗадачиНаСервере.ПолучитьЗначениеРеквизита(Запись.РелизОбновления, "Каталог");
	Если ЗначениеЗаполнено(ПутьККаталогу) Тогда
		КаталогРасположения = ПутьККаталогу;
	Иначе
		КаталогРасположения = ЗадачиНаСервере.ПолучитьОсновнойКаталогАрхива();
	КонецЕсли;	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;	
	ДиалогВыбораКаталога.Заголовок = "Выберите каталог";	
	ДиалогВыбораКаталога.Каталог = КаталогРасположения;
	Если ДиалогВыбораКаталога.Выбрать() Тогда
		Адрес = ПоместитьДвоичныеДанныеАрхиваВоВременноеХранилищеНаСервере();
		Если НЕ Адрес = Неопределено Тогда
			
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла("zip");			
			Описание = Новый ОписаниеПередаваемогоФайла(ИмяВременногоФайла, Адрес);
			ПолучаемыеФайлы = Новый Массив;
			ПолучаемыеФайлы.Добавить(Описание);
			НачатьПолучениеФайлов(Новый ОписаниеОповещения("СохранитьДвоичныеДанныеАрхиваВФайлОписаниеОповещения", ЭтаФорма, Новый Структура("ИмяВременногоФайла, КаталогСохранения", ИмяВременногоФайла, ДиалогВыбораКаталога.Каталог)), ПолучаемыеФайлы,,Ложь);
			
		Иначе 
			ПоказатьПредупреждение(, "Ошибка при помещении двоичных данных архива в хранилище!");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//
//
Процедура СохранитьДвоичныеДанныеАрхиваВФайлОписаниеОповещения(ПолученныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ПолученныеФайлы = Неопределено Тогда 
		
		ПоказатьПредупреждение(, "Ошибка при сохранении архива!");
		
	Иначе 
		
		Для Каждого ТекущийФайл Из ПолученныеФайлы Цикл 
			
			ЧтениеZIP = Новый ЧтениеZipФайла();
			ЧтениеZIP.Открыть(ТекущийФайл.Имя);
			ЧтениеZIP.ИзвлечьВсе(ДополнительныеПараметры.КаталогСохранения, РежимВосстановленияПутейФайловZIP.Восстанавливать);				
			ЧтениеZIP.Закрыть();		
			
		КонецЦикла;
		
		Попытка
			УдалитьФайлы(ДополнительныеПараметры.ИмяВременногоФайла);
		Исключение
		КонецПопытки;
		
		ПоказатьПредупреждение(, "Файл успешно сохранен.");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура УдалитьДвоичныеДанныеАрхива(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("УдалитьДвоичныеДанныеАрхиваОписаниеОповещения", ЭтаФорма), "Вы уверены, что хотите удалить данные файла выгрузки из хранилища?", РежимДиалогаВопрос.ДаНет);
		
КонецПроцедуры

&НаКлиенте
//
//
Процедура УдалитьДвоичныеДанныеАрхиваОписаниеОповещения(РезультатОповещения, ПараметрыОповещения) Экспорт
	
	Если РезультатОповещения = КодВозвратаДиалога.Да Тогда 
		
		флУспешно = УдалитьДвоичныеДанныеАрхиваНаСервере();
		
		ЭтаФорма.Прочитать();
		УправлениеЭлементамиФормы();
		
		Если флУспешно Тогда			
			
			ПоказатьПредупреждение(, "Данные удалены.");
			
		Иначе 
			
			ПоказатьПредупреждение(, "Ошибка при выполнении операции!" + Символы.ПС + "Подробное описание ошибки записано в журнал регистрации");
			
		КонецЕсли;		
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
//
//
Функция УдалитьДвоичныеДанныеАрхиваНаСервере()
	Возврат РегистрыСведений.ХранилищеРелизовОбновлений.УдалитьДвоичныеДанныеФайлаАрхива(Запись.РелизОбновления);
КонецФункции

&НаКлиенте
//
//
Процедура ЗагрузитьДвоичныеДанныеАрхиваИзФайла(Команда)
		
	ПоказатьВопрос(Новый ОписаниеОповещения("ЗагрузитьДвоичныеДанныеАрхиваИзФайлаОписаниеОповещения", ЭтаФорма), "При загрузке существующие данные файла архива будут перезаписаны. Продолжить?", РежимДиалогаВопрос.ДаНет);	
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ЗагрузитьДвоичныеДанныеАрхиваИзФайлаОписаниеОповещения(РезультатОповещения, ПараметрыОповещения) Экспорт
		
	Если РезультатОповещения = КодВозвратаДиалога.Нет Тогда Возврат; КонецЕсли;
			
	ПутьККаталогу = ЗадачиНаСервере.ПолучитьЗначениеРеквизита(Запись.РелизОбновления, "Каталог");
	Если ЗагрузитьДвоичныеДанныеАрхиваИзФайлаНаСервере(ПутьККаталогу) Тогда
		ПоказатьПредупреждение(, "Данные загружены.");
	Иначе 
		ПоказатьПредупреждение(, "Ошибка при выполнении операции!" + Символы.ПС + "Подробное описание ошибки записано в журнал регистрации");
	КонецЕсли;
	ЭтаФорма.Прочитать();
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаСервере
//
//
Функция ЗагрузитьДвоичныеДанныеАрхиваИзФайлаНаСервере(КаталогЗагрузки)
	Возврат РегистрыСведений.ХранилищеРелизовОбновлений.ЗагрузитьДвоичныеДанныеАрхиваИзКаталога(Запись.РелизОбновления, КаталогЗагрузки);
КонецФункции


