
&НаКлиенте
//
//
Процедура Далее(Команда)
	ИмяТекущейСтраницы = СокрЛП(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя);
	Если ИмяТекущейСтраницы = "ГруппаНачало" Тогда	
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаИмпортРелизов;
		ОбработатьКаталог(Команда);
	ИначеЕсли ИмяТекущейСтраницы = "ГруппаИмпортРелизов" Тогда		
		//
	КонецЕсли;
	УправлениеДоступностьюКнопок();
КонецПроцедуры

&НаКлиенте
//
//
Процедура Назад(Команда)
	ИмяТекущейСтраницы = СокрЛП(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя);
	Если ИмяТекущейСтраницы = "ГруппаНачало" Тогда
		//
	ИначеЕсли ИмяТекущейСтраницы = "ГруппаИмпортРелизов" Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНачало;
	КонецЕсли;	
	УправлениеДоступностьюКнопок();
КонецПроцедуры

&НаСервере
//
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.ОбновлятьКаталогиЗагруженныхРелизовОбновлений = Истина;	
	
	Описание = "Мастер импорта релизов обновлений из каталога."
	+ Символы.ПС + Символы.ПС + "1. Выполняется обработка содержимого выбранного каталога (включая подкаталоги) на предмет поиска релизов обновлений."
	+ Символы.ПС + Символы.ПС + "2. Обновления и сведения о них идентифицируются по наличию файлов 1cv8.mft."
	+ Символы.ПС + Символы.ПС + "3. Перед загрузкой сведений о релизах выполняется сопоставление по видам конфигураций, заведенных в базе." + Символы.ПС + "При отсутствии каких-либо видов конфигураций, выполнится их создание.";
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНачало;	
КонецПроцедуры

&НаКлиенте
//
//
Процедура УправлениеДоступностьюКнопок()
	Элементы.Далее.Доступность = Истина;
	Элементы.Назад.Доступность = Истина;
	Элементы.ИдентифицированныеДанныеИмпортироватьДанные.Доступность = Истина;
	Элементы.ИдентифицированныеДанныеОбработатьКаталог.Доступность = Истина;
	
	ИмяТекущейСтраницы = СокрЛП(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя);
	Если ИмяТекущейСтраницы = "ГруппаНачало" Тогда
		Элементы.Назад.Доступность = Ложь;
	ИначеЕсли ИмяТекущейСтраницы = "ГруппаИмпортРелизов" Тогда
		Элементы.Далее.Доступность = Ложь;
		Если НЕ ЗначениеЗаполнено(Объект.ПутьККаталогу) Тогда			
			Элементы.ИдентифицированныеДанныеОбработатьКаталог.Доступность = Ложь;
			Элементы.ИдентифицированныеДанныеИмпортироватьДанные.Доступность = Ложь;
		КонецЕсли;
		Если Объект.ИдентифицированныеДанные.Количество() = 0 Тогда
			Элементы.ИдентифицированныеДанныеИмпортироватьДанные.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//
//
Процедура ПометитьВсе(Команда)
	УстановитьПометку(Истина);
КонецПроцедуры

&НаКлиенте
//
//
Процедура УстановитьПометку(Пометка)
	Для Каждого ТекущаяСтрока Из Объект.ИдентифицированныеДанные Цикл
		ТекущаяСтрока.Импортировать = Пометка;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
//
//
Процедура СнятьВсе(Команда)
	УстановитьПометку(Ложь);	
КонецПроцедуры

&НаСервере
//
//
Процедура ПроанализироватьСодержимоеКаталога(ТекущийОбъект, ТекущийКаталог)			
	
	стрОтборИмпортаПоВидуКонфигурации = "";
	стрОтборИмпортаПоРедакции = "";
	Если ЗначениеЗаполнено(ЭтаФорма.ОтборИмпортаПоВидуКонфигурации) Тогда
		ВидКонфигурации = ОбщегоНазначенияСервер.ПолучитьДанныеПоОбъекту(ЭтаФорма.ОтборИмпортаПоВидуКонфигурации);
		стрОтборИмпортаПоВидуКонфигурации = СокрЛП(ВидКонфигурации.Наименование);
		стрОтборИмпортаПоРедакции = СокрЛП(ВидКонфигурации.Редакция);
	КонецЕсли;
	
	МассивФайлов = НайтиФайлы(ТекущийКаталог, "1cv8.mft", Истина);
	Для Каждого ТекущийФайл Из МассивФайлов Цикл
		Данные_1cv8_mft = Справочники.РелизыОбновлений.Прочитать_1cv8_mft(ТекущийФайл.Путь);
		Если Данные_1cv8_mft.Количество() > 0 Тогда
			
			РедакцияРелиза = ЗадачиНаСервере.РедакцияПоНомеруРелиза(Данные_1cv8_mft.Version);
			Если ЗначениеЗаполнено(ЭтаФорма.ОтборИмпортаПоВидуКонфигурации) Тогда
				Если НЕ стрОтборИмпортаПоВидуКонфигурации = Данные_1cv8_mft.Name Тогда 
					Продолжить; 
				КонецЕсли;
				Если ЗначениеЗаполнено(стрОтборИмпортаПоРедакции) И НЕ стрОтборИмпортаПоРедакции = РедакцияРелиза Тогда 
					Продолжить; 
				КонецЕсли;
			КонецЕсли;
			
			НоваяСтрока = ТекущийОбъект.ИдентифицированныеДанные.Добавить();
			НоваяСтрока.Импортировать = Истина;
			НоваяСтрока.НомерРелиза = Данные_1cv8_mft.Version;
			НоваяСтрока.Редакция = РедакцияРелиза;
			НоваяСтрока.Каталог = ТекущийФайл.Путь;
			НоваяСтрока.ВидКонфигурации = Данные_1cv8_mft.Name;			
			
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ИдентифицированныеДанные.НомерРелиза КАК СТРОКА(500)) КАК НомерРелиза,
	|	ВЫРАЗИТЬ(ИдентифицированныеДанные.Редакция КАК СТРОКА(500)) КАК Редакция,
	|	ИдентифицированныеДанные.Каталог,
	|	ВЫРАЗИТЬ(ИдентифицированныеДанные.ВидКонфигурации КАК СТРОКА(500)) КАК ВидКонфигурации
	|ПОМЕСТИТЬ втИдентифицированныеДанные
	|ИЗ
	|	&ИдентифицированныеДанные КАК ИдентифицированныеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(РелизыОбновлений.Ссылка, 0) = 0
	|				ИЛИ &ОбновлятьКаталогиЗагруженныхРелизовОбновлений = ИСТИНА
	|					И НЕ РелизыОбновлений.Каталог ПОДОБНО втИдентифицированныеДанные.Каталог
	|				ИЛИ &ПомечатьНаУдаленийОтсутствующиеВКаталогеРелизыОбновлений = ИСТИНА
	|					И ЕСТЬNULL(втИдентифицированныеДанные.НомерРелиза, 0) = 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Импортировать,
	|	втИдентифицированныеДанные.НомерРелиза КАК НомерРелиза,
	|	втИдентифицированныеДанные.Редакция КАК Редакция,
	|	втИдентифицированныеДанные.Каталог,
	|	втИдентифицированныеДанные.ВидКонфигурации КАК ВидКонфигурации,
	|	РелизыОбновлений.Ссылка КАК РелизОбновления
	|ИЗ
	|	втИдентифицированныеДанные КАК втИдентифицированныеДанные
	|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.РелизыОбновлений КАК РелизыОбновлений
	|		ПО (втИдентифицированныеДанные.НомерРелиза = (ВЫРАЗИТЬ(РелизыОбновлений.Наименование КАК СТРОКА(500))))
	|			И (втИдентифицированныеДанные.ВидКонфигурации = (ВЫРАЗИТЬ(РелизыОбновлений.ВидКонфигурации.Наименование КАК СТРОКА(500)))
	|				ИЛИ втИдентифицированныеДанные.ВидКонфигурации = (ВЫРАЗИТЬ(РелизыОбновлений.ВидКонфигурации.Синоним КАК СТРОКА(500))))
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ЕСТЬNULL(РелизыОбновлений.Ссылка, 0) = 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ НЕ РелизыОбновлений.ВидКонфигурации = ЗНАЧЕНИЕ(Справочник.ВидыКонфигураций.АдминистрированиеИнформационныхБаз)
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ИспользуемОтборИмпортаПоВидуКонфигурации
	|				ТОГДА ВЫБОР
	|						КОГДА НЕ (ВЫРАЗИТЬ(втИдентифицированныеДанные.ВидКонфигурации КАК СТРОКА(500))) = (ВЫРАЗИТЬ(&стрОтборИмпортаПоВидуКонфигурации КАК СТРОКА(500)))
	|								ИЛИ НЕ (ВЫРАЗИТЬ(РелизыОбновлений.ВидКонфигурации.Наименование КАК СТРОКА(500))) = (ВЫРАЗИТЬ(&стрОтборИмпортаПоВидуКонфигурации КАК СТРОКА(500)))
	|							ТОГДА ЛОЖЬ
	|						ИНАЧЕ ВЫБОР
	|								КОГДА &ИспользуемОтборИмпортаПоРедакции
	|									ТОГДА (ВЫРАЗИТЬ(РелизыОбновлений.ВидКонфигурации.Редакция КАК СТРОКА(500))) <> """"
	|											И (ВЫРАЗИТЬ(РелизыОбновлений.ВидКонфигурации.Редакция КАК СТРОКА(500))) <> (ВЫРАЗИТЬ(&стрОтборИмпортаПоРедакции КАК СТРОКА(500)))
	|								ИНАЧЕ ИСТИНА
	|							КОНЕЦ
	|					КОНЕЦ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Импортировать УБЫВ,
	|	ВидКонфигурации,
	|	НомерРелиза УБЫВ";
	
	Запрос.Параметры.Вставить("ИдентифицированныеДанные", ТекущийОбъект.ИдентифицированныеДанные.Выгрузить());
	Запрос.Параметры.Вставить("ОбновлятьКаталогиЗагруженныхРелизовОбновлений", ТекущийОбъект.ОбновлятьКаталогиЗагруженныхРелизовОбновлений);
	Запрос.Параметры.Вставить("ПомечатьНаУдаленийОтсутствующиеВКаталогеРелизыОбновлений", ТекущийОбъект.ПомечатьНаУдаленийОтсутствующиеВКаталогеРелизыОбновлений);
	Запрос.Параметры.Вставить("стрОтборИмпортаПоВидуКонфигурации", стрОтборИмпортаПоВидуКонфигурации);
	Запрос.Параметры.Вставить("стрОтборИмпортаПоРедакции", стрОтборИмпортаПоРедакции);
	Запрос.Параметры.Вставить("ИспользуемОтборИмпортаПоВидуКонфигурации", ЗначениеЗаполнено(стрОтборИмпортаПоВидуКонфигурации));
	Запрос.Параметры.Вставить("ИспользуемОтборИмпортаПоРедакции", ЗначениеЗаполнено(стрОтборИмпортаПоРедакции));
	
	ТекущийОбъект.ИдентифицированныеДанные.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ОбработатьКаталог(Команда)
	ОбработатьКаталогСервер();	
КонецПроцедуры

&НаСервере
//
//
Процедура ОбработатьКаталогСервер()
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	Если ЗначениеЗаполнено(ТекущийОбъект.ПутьККаталогу) Тогда
		ТекущийОбъект.ИдентифицированныеДанные.Очистить();
		ПроанализироватьСодержимоеКаталога(ТекущийОбъект, ТекущийОбъект.ПутьККаталогу);		
		Если ТекущийОбъект.ИдентифицированныеДанные.Количество() > 0 Тогда
			ЗначениеВРеквизитФормы(ТекущийОбъект, "Объект");
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//
//
Процедура ИмпортироватьДанные(Команда)
	ИмпортироватьДанныеСервер();
КонецПроцедуры

&НаСервере
//
//
Процедура ИмпортироватьДанныеСервер()	
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	РелизыОбновлений.Ссылка,
	//|	РелизыОбновлений.Наименование,
	//|	РелизыОбновлений.ВидКонфигурации
	//|ИЗ
	//|	Справочник.РелизыОбновлений КАК РелизыОбновлений
	//|ГДЕ
	//|	НЕ РелизыОбновлений.ПометкаУдаления	
	//|	И НЕ РелизыОбновлений.ВидКонфигурации = ЗНАЧЕНИЕ(Справочник.ВидыКонфигураций.АдминистрированиеИнформационныхБаз)";
	//
	//ТаблицаИмеющихсяОбновлений = Запрос.Выполнить().Выгрузить();	
	//ТаблицаИмеющихсяОбновлений.Индексы.Добавить("Наименование, ВидКонфигурации");
	//
	//ПараметрыОтбора = Новый Структура(); 	
	
	КэшСсылокДобавляемыхВидовКонфигураций = Новый Соответствие;
	Для Каждого ТекущаяСтрока Из Объект.ИдентифицированныеДанные Цикл
		Если ТекущаяСтрока.Импортировать Тогда
						
			Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.ВидКонфигурации) ИЛИ НЕ ЗначениеЗаполнено(ТекущаяСтрока.НомерРелиза) ИЛИ НЕ ЗначениеЗаполнено(ТекущаяСтрока.Каталог) Тогда
				
				Если Объект.ПомечатьНаУдаленийОтсутствующиеВКаталогеРелизыОбновлений И ЗначениеЗаполнено(ТекущаяСтрока.РелизОбновления) Тогда
					
					НовыйРелиз = ТекущаяСтрока.РелизОбновления.ПолучитьОбъект();
					НовыйРелиз.УстановитьПометкуУдаления(Истина);
					
				Иначе 
					
					ОбщегоНазначенияСервер.ВывестиСообщение("Данные строки " + ТекущаяСтрока.НомерСтроки + " не загружены, т.к. не заполнены значения одного или нескольких полей импорта");
					
				КонецЕсли;
				
								
				Продолжить;
				
			КонецЕсли;
			
			ТекущаяСтрокаВидКонфигурации = СокрЛП(ТекущаяСтрока.ВидКонфигурации);
			ТекущаяСтрокаНомерРелиза = СокрЛП(ТекущаяСтрока.НомерРелиза);
			ТекущаяСтрокаКаталог = СокрЛП(ТекущаяСтрока.Каталог);
			ТекущаяСтрокаРедакция = СокрЛП(ТекущаяСтрока.Редакция);
			
			ВидКонфигурации = КэшСсылокДобавляемыхВидовКонфигураций.Получить(ТекущаяСтрокаВидКонфигурации + ТекущаяСтрокаРедакция);
			Если ВидКонфигурации = Неопределено Тогда
				
				ВидКонфигурации = ЗадачиНаСервере.ПолучитьВидКонфигурацииПоНаименованию(ТекущаяСтрокаВидКонфигурации, ТекущаяСтрокаРедакция);				
				КэшСсылокДобавляемыхВидовКонфигураций.Вставить(ТекущаяСтрокаВидКонфигурации, ВидКонфигурации.Ссылка); 
				
			КонецЕсли;
			
			НовыйРелиз = Справочники.РелизыОбновлений.ПустаяСсылка();			
			
			//ПараметрыОтбора.Очистить();
			//ПараметрыОтбора.Вставить("Наименование", ТекущаяСтрокаНомерРелиза); 
			//ПараметрыОтбора.Вставить("ВидКонфигурации", ВидКонфигурации.Ссылка);
			//НайденныеОбновленияСТекущимНомером = ТаблицаИмеющихсяОбновлений.НайтиСтроки(ПараметрыОтбора);
			//Если НайденныеОбновленияСТекущимНомером.Количество() > 0 Тогда
			//	НовыйРелиз = НайденныеОбновленияСТекущимНомером[0].Ссылка
			//КонецЕсли;			
			
			Попытка
				Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.РелизОбновления) Тогда
					
					НовыйРелиз = Справочники.РелизыОбновлений.СоздатьЭлемент();
					НовыйРелиз.Наименование = ТекущаяСтрокаНомерРелиза;
					НовыйРелиз.ВидКонфигурации = ВидКонфигурации.Ссылка;
					НовыйРелиз.Каталог = ТекущаяСтрокаКаталог;
					НовыйРелиз.Записать();
					
					ТекущаяСтрока.РелизОбновления = НовыйРелиз.Ссылка;
					
				ИначеЕсли Объект.ОбновлятьКаталогиЗагруженныхРелизовОбновлений Тогда
					
					НовыйРелиз = ТекущаяСтрока.РелизОбновления.Ссылка.ПолучитьОбъект();
					НовыйРелиз.УстановитьПометкуУдаления(Ложь);
					НовыйРелиз.Каталог = ТекущаяСтрокаКаталог;
					НовыйРелиз.Записать();
					
				КонецЕсли;
				
				Если Объект.ЗагружатьАрхивОбновленияВХранилище Тогда 
					Справочники.РелизыОбновлений.СоздатьЗаписьАрхиваНаСервере(НовыйРелиз.Ссылка);														
					РегистрыСведений.ХранилищеРелизовОбновлений.ЗагрузитьДвоичныеДанныеАрхиваИзКаталога(НовыйРелиз.Ссылка, ТекущаяСтрока.Каталог);
				КонецЕсли;
				
				ТекущаяСтрока.Импортировать = Ложь;
			Исключение
				ОбщегоНазначенияСервер.ВывестиСообщение("Ошибка импорта релиза [" + ТекущаяСтрокаНомерРелиза + "] в строке " + ТекущаяСтрока.НомерСтроки + " : " + ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
//
//
Процедура ПутьККаталогуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);		
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;	
	ДиалогВыбораКаталога.Заголовок = "Выберите каталог";	
	ДиалогВыбораКаталога.Каталог = "";
	Если ДиалогВыбораКаталога.Выбрать() Тогда
		Объект.ПутьККаталогу = ДиалогВыбораКаталога.Каталог;		
	КонецЕсли;
	
	УправлениеДоступностьюКнопок();

КонецПроцедуры

&НаКлиенте
//
//
Процедура ПутьККаталогуПриИзменении(Элемент)
	УправлениеДоступностьюКнопок();
КонецПроцедуры
