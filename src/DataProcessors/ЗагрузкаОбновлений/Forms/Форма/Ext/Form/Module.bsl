&НаКлиенте
//
//
Процедура Далее(Команда)
	ИмяТекущейСтраницы = СокрЛП(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя);
	Если ИмяТекущейСтраницы = "ГруппаНачало" Тогда		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПроверитьОбновления;		
		ПроверитьНаличиеОбновлений(Команда);
	ИначеЕсли ИмяТекущейСтраницы = "ГруппаПроверитьОбновления" Тогда		
		//
	КонецЕсли;
	УправлениеЭлементамиФормы();
КонецПроцедуры

&НаКлиенте
//
//
Процедура Назад(Команда)
	ИмяТекущейСтраницы = СокрЛП(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя);
	Если ИмяТекущейСтраницы = "ГруппаНачало" Тогда
		//
	ИначеЕсли ИмяТекущейСтраницы = "ГруппаПроверитьОбновления" Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНачало;
	КонецЕсли;	
	УправлениеЭлементамиФормы();
КонецПроцедуры

&НаСервере
//
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНачало;	
	Элементы.ВыполнятьВФоне.Доступность = ОбщегоНазначенияСервер.ДопустимоИспользованиеФайловыхЗаданий();
	Объект.ВыполнятьВФоне = Элементы.ВыполнятьВФоне.Доступность;	
	Объект.ЗагружатьРелизыОбновленийВХранилище = Константы.ЗагружатьРелизыОбновленийВХранилище.Получить();
КонецПроцедуры

&НаКлиенте
//
//
Процедура УправлениеЭлементамиФормы() Экспорт
	Элементы.Далее.Доступность = Истина;
	Элементы.Назад.Доступность = Истина;			
	ИмяТекущейСтраницы = СокрЛП(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя);
	Если ИмяТекущейСтраницы = "ГруппаНачало" Тогда
		Элементы.Назад.Доступность = Ложь;
		Элементы.Далее.Доступность = Объект.ВидыКонфигураций.Количество();		
	ИначеЕсли ИмяТекущейСтраницы = "ГруппаПроверитьОбновления" Тогда
		Элементы.Далее.Доступность = Ложь;		
	КонецЕсли;	
	Элементы.ИндикаторПроцесса.Заголовок = "Индикатор процесса";
	Элементы.ИндикаторПроцесса.Видимость = ЗначениеЗаполнено(Объект.КлючФоновогоЗадания);
	ЭтаФорма.Доступность = НЕ ЗначениеЗаполнено(Объект.КлючФоновогоЗадания);		
КонецПроцедуры

&НаКлиенте
//
//
Процедура ПроверитьНаличиеОбновлений(Команда)
	//ПроверитьНаличиеОбновленийНаСервере();
	Объект.ДоступныеОбновления.Очистить();
	Если Объект.ВыполнятьВФоне Тогда
		Результат = ФоновыеПроцессыМенеджерСервер.ПроверкаАктивностиФоновогоЗаданияСервер(Объект.КлючФоновогоЗадания);
		
		ЗаданиеАктиво = Ложь;		
		Для Каждого ТекущееЗначениеРезультат Из Результат Цикл
			ЗаданиеАктиво = ЗаданиеАктиво ИЛИ ТекущееЗначениеРезультат.Активно;
		КонецЦикла;
		
		Если ЗаданиеАктиво Тогда
			ПоказатьПредупреждение(, "Процесс проверки наличия обновлений уже запущен");
		Иначе 			
			ЗапуститьФоновоеЗаданиеПроверкиНаличияОбновлений();
			ПодключитьОбработчикОжидания("ПроверкаАктивностиФоновогоЗаданияКлиент", 2, Истина);
			ВыполнитьОбработкуЗаданий();			
		КонецЕсли;
	Иначе
		ПроверитьНаличиеОбновленийНаСервере();
	КонецЕсли;
	УправлениеЭлементамиФормы();
КонецПроцедуры

&НаСервере
//
//
Процедура ПроверитьНаличиеОбновленийНаСервере()		
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	ТекущийОбъект.ПроверитьНаличиеОбновлений();
	ЗначениеВРеквизитФормы(ТекущийОбъект, "Объект");
КонецПроцедуры   

&НаКлиенте
//
//
Процедура ЗагрузитьОбновления(Команда)	
	Если Объект.ВыполнятьВФоне Тогда
		Результат = ФоновыеПроцессыМенеджерСервер.ПроверкаАктивностиФоновогоЗаданияСервер(Объект.КлючФоновогоЗадания);
		
		ЗаданиеАктиво = Ложь;		
		Для Каждого ТекущееЗначениеРезультат Из Результат Цикл
			ЗаданиеАктиво = ЗаданиеАктиво ИЛИ ТекущееЗначениеРезультат.Активно;
		КонецЦикла;
		
		Если ЗаданиеАктиво Тогда
			ПоказатьПредупреждение(, "Процесс загрузки обновлений уже запущен");
		Иначе			
			ЗапуститьФоновоеЗаданиеЗагрузки();
			ПодключитьОбработчикОжидания("ПроверкаАктивностиФоновогоЗаданияКлиент", 2, Истина);			
		КонецЕсли;
	Иначе
		ЗагрузитьОбновленияНаСервере();			
	КонецЕсли;
	УправлениеЭлементамиФормы();
КонецПроцедуры

&НаСервере
//
//
Функция ПолучитьСтруктуруПараметровТекущейОбработки()
	Объект.АдресВременногоХранилищаДляВнутреннегоОбмена = ПоместитьВоВременноеХранилище("");
	ПараметрыОбработки = Новый Структура;
	ПараметрыОбработки.Вставить("ДоступныеОбновления", Объект.ДоступныеОбновления.Выгрузить());	
	ПараметрыОбработки.Вставить("ВидыКонфигураций", Объект.ВидыКонфигураций.Выгрузить());
	ПараметрыОбработки.Вставить("ВыполнятьВФоне", Ложь);
	ПараметрыОбработки.Вставить("ЗагружатьРелизыОбновленийВХранилище", Объект.ЗагружатьРелизыОбновленийВХранилище);
	ПараметрыОбработки.Вставить("КлючФоновогоЗадания", Объект.КлючФоновогоЗадания);	
	ПараметрыОбработки.Вставить("АдресВременногоХранилищаДляВнутреннегоОбмена", Объект.АдресВременногоХранилищаДляВнутреннегоОбмена);	
	Возврат ПараметрыОбработки;
КонецФункции

&НаСервере
//
//
Процедура ЗапуститьФоновоеЗаданиеЗагрузки()	
	Элементы.ИндикаторПроцесса.МинимальноеЗначение = 0;	
	Элементы.ИндикаторПроцесса.МаксимальноеЗначение = Объект.ДоступныеОбновления.Количество();
	Объект.ИндикаторПроцесса = 0;	
		
	ПараметрыФоновогоПроцесса = Новый Массив;
	ПараметрыФоновогоПроцесса.Добавить(ПолучитьСтруктуруПараметровТекущейОбработки());
	Объект.КлючФоновогоЗадания = Новый УникальныйИдентификатор;
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	ФоновыеЗадания.Выполнить("ФоновыеПроцессыСервер.ФоновыйПроцессОбработкиПоЗагрузкеОбновлений", ПараметрыФоновогоПроцесса, Объект.КлючФоновогоЗадания, ТекущийОбъект.мИмяСобытияВЖурналеРегистрации);
КонецПроцедуры

&НаКлиенте
//
//
Процедура ПроверкаАктивностиФоновогоЗаданияКлиент() Экспорт
	КомандаДляВыполненияНаКлиенте = Неопределено;
	Активность = ПроверкаАктивностиФоновогоЗаданияСервер(КомандаДляВыполненияНаКлиенте);	
	ФоновыеПроцессыКлиент.ВыполнитьКоманду(КомандаДляВыполненияНаКлиенте, ЭтаФорма, Объект);
	Если Активность Тогда
		ПодключитьОбработчикОжидания("ПроверкаАктивностиФоновогоЗаданияКлиент", 2, Истина);
	КонецЕсли;
КонецПроцедуры

&НаСервере
//
//
Функция ПроверкаАктивностиФоновогоЗаданияСервер(КомандаДляВыполненияНаКлиенте = Неопределено) Экспорт
	Возврат ФоновыеПроцессыСервер.ПроверкаАктивностиФоновогоЗадания(ЭтаФорма, Объект, КомандаДляВыполненияНаКлиенте);
КонецФункции

&НаСервере
//
//
Процедура ЗагрузитьОбновленияНаСервере()
	
	Если НЕ Объект.ЗагружатьРелизыОбновленийВХранилище И НЕ ЗначениеЗаполнено(Константы.КаталогОбновлений.Получить()) Тогда
		ОбщегоНазначенияСервер.ВывестиСообщение("Загрузка не может быть выполнена, т.к. отключена опция сохранения данных в хранилище, и не задан каталог обновлений!" + Символы.ПС + "");
		Возврат
	КонецЕсли;
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	ТекущийОбъект.ЗагрузитьОбновления();
	ЗначениеВРеквизитФормы(ТекущийОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
//
//
Процедура ПриОткрытии(Отказ)
	УправлениеЭлементамиФормы();
КонецПроцедуры

&НаКлиенте
//
//
Процедура ДоступныеОбновленияПриИзменении(Элемент)
	УправлениеЭлементамиФормы();
КонецПроцедуры

&НаКлиенте
//
//
Процедура ВидыКонфигурацийПриИзменении(Элемент)
	УправлениеЭлементамиФормы();
КонецПроцедуры

&НаКлиенте
//
//
Процедура ПометитьВсе(Команда)
	УстановитьПометку(Истина);
КонецПроцедуры

&НаКлиенте
//
//
Процедура УстановитьПометку(Пометка)
	Для Каждого ТекущаяСтрока Из Объект.ДоступныеОбновления Цикл
		ТекущаяСтрока.Загрузить = Пометка;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
//
//
Процедура СнятьВсе(Команда)
	УстановитьПометку(Ложь);	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ЗаполнитьПоВсемВидамКонфигурации(Команда)
	ЗаполнитьПоВсемВидамКонфигурацииНаСервере();
КонецПроцедуры

&НаСервере
//
//
Процедура ЗаполнитьПоВсемВидамКонфигурацииНаСервере()
	Объект.ВидыКонфигураций.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыКонфигураций.Ссылка КАК ВидКонфигурации
		|ИЗ
		|	Справочник.ВидыКонфигураций КАК ВидыКонфигураций
		|ГДЕ
		|	НЕ ВидыКонфигураций.ПометкаУдаления";
	Объект.ВидыКонфигураций.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

&НаСервере
//
//
Процедура ЗапуститьФоновоеЗаданиеПроверкиНаличияОбновлений()	
	Элементы.ИндикаторПроцесса.МинимальноеЗначение = 0;	
	Элементы.ИндикаторПроцесса.МаксимальноеЗначение = Объект.ДоступныеОбновления.Количество();
	Объект.ИндикаторПроцесса = 0;	
		
	ПараметрыФоновогоПроцесса = Новый Массив;
	ПараметрыФоновогоПроцесса.Добавить(ПолучитьСтруктуруПараметровТекущейОбработки());		
	Объект.КлючФоновогоЗадания = Новый УникальныйИдентификатор;
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	ФоновыеЗадания.Выполнить("ФоновыеПроцессыСервер.ФоновыйПроцессОбработкиПоПроверкеНаличияОбновлений", ПараметрыФоновогоПроцесса, Объект.КлючФоновогоЗадания, ТекущийОбъект.мИмяСобытияВЖурналеРегистрации);
КонецПроцедуры

&НаКлиенте
//
//
Процедура Подбор(Команда)	
	
	ОткрытьФорму("Справочник.ВидыКонфигураций.ФормаВыбора", Новый Структура("ЗакрыватьПриВыборе, МножественныйВыбор", Ложь, Истина), ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ВыбранноеЗначениеТип = ТипЗнч(ВыбранноеЗначение);
	Если ВыбранноеЗначениеТип = Тип("Массив") Тогда
		Для Каждого ТекущееЗначениеМассива ИЗ ВыбранноеЗначение Цикл
			ОбработкаВыбора(ТекущееЗначениеМассива, ИсточникВыбора);
		КонецЦикла;
	ИначеЕсли ВыбранноеЗначениеТип = Тип("СправочникСсылка.ВидыКонфигураций") Тогда
		Если Объект.ВидыКонфигураций.НайтиСтроки(Новый Структура("ВидКонфигурации", ВыбранноеЗначение)).Количество() = 0 Тогда
			НоваяСтрокаСписок = Объект.ВидыКонфигураций.Добавить();
			НоваяСтрокаСписок.ВидКонфигурации = ВыбранноеЗначение;			
		КонецЕсли;
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ЗагружатьТолькоНовыеПриИзменении(Элемент)
	ИмяТекущейСтраницы = СокрЛП(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя);
	Если ИмяТекущейСтраницы = "ГруппаПроверитьОбновления" Тогда
		ПроверитьНаличиеОбновлений(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//
//
Процедура ВидыКонфигурацийВидКонфигурацииПриИзменении(Элемент)
	Элементы.ВидыКонфигураций.ТекущиеДанные.Редакция = "";
	Если ЗначениеЗаполнено(Элементы.ВидыКонфигураций.ТекущиеДанные.ВидКонфигурации) Тогда
		Элементы.ВидыКонфигураций.ТекущиеДанные.Редакция = ЗадачиНаСервере.ПолучитьЗначениеРеквизита(Элементы.ВидыКонфигураций.ТекущиеДанные.ВидКонфигурации, "Редакция");
	КонецЕсли;
КонецПроцедуры
