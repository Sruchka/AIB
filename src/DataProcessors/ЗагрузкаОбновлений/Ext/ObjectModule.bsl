Перем мИмяСобытияВЖурналеРегистрации Экспорт;

&НаСервере
//
//
Функция ПолучитьИмяСервераОбновлений() Экспорт
	Возврат "downloads.v8.1c.ru";
КонецФункции

&НаСервере
//
//
Функция ПолучитьПодкючениеКРесурсу(ИмяСервера) Экспорт	
	Соединение = Неопределено;	
	Пользователь = Константы.ЛогинИТС.Получить();
	Пароль = Константы.ПарольИТС.Получить();
	Попытка
		Соединение = Новый HTTPСоединение(ИмяСервера,, Пользователь, Пароль);		
	Исключение
		Соединение = Неопределено;
		СодержаниеОшибки = "Ошибка подключени к ресурсу [" + ИмяСервера + "]: " + ОписаниеОшибки();
		ОбщегоНазначенияСервер.ВывестиСообщение(СодержаниеОшибки);
		ЗаписьЖурналаРегистрации(мИмяСобытияВЖурналеРегистрации, УровеньЖурналаРегистрации.Ошибка,,, СодержаниеОшибки);
	КонецПопытки;
	Возврат Соединение;
КонецФункции

&НаСервере
//
//
Функция ЗагрузитьФайлСРесурса(ИмяСервера, ПутьКФайлуСпискаНаСервере, ПутьКВременномуФайлу, Соединение = Неопределено, ВыводитьСообщениеПриОшибкеЗагрузки = Истина) Экспорт
	Результат = Ложь;
	Попытка
		Если Соединение = Неопределено Тогда
			Соединение = ПолучитьПодкючениеКРесурсу(ИмяСервера);
		КонецЕсли;
		ОтветHTTP = Соединение.Получить(Новый HTTPЗапрос(ПутьКФайлуСпискаНаСервере), ПутьКВременномуФайлу);
		Если ОтветHTTP.КодСостояния = 200 Тогда
			Результат = Истина;		
		Иначе
			УдалитьФайлы(ПутьКВременномуФайлу);
			Если ВыводитьСообщениеПриОшибкеЗагрузки Тогда 
				ВызватьИсключение "Код состояния " + ОтветHTTP.КодСостояния;
			КонецЕсли;
		КонецЕсли;
	Исключение		
		СодержаниеОшибки = "Ошибка загрузки файла с ресурса [" + ПутьКФайлуСпискаНаСервере + "]: " + ОписаниеОшибки();
		ОбщегоНазначенияСервер.ВывестиСообщение(СодержаниеОшибки);
		ЗаписьЖурналаРегистрации(мИмяСобытияВЖурналеРегистрации, УровеньЖурналаРегистрации.Ошибка,,, СодержаниеОшибки);
	КонецПопытки;	
	Возврат Результат;
КонецФункции

&НаСервере
//
//
Функция ПолучитьСодержимоеСпискаОбновленийССервера(Соединение = Неопределено) Экспорт
	
	Результат = "";	
	
	ПутьКФайлуСпискаНаСервере = "tmplts/v8cscdsc.lst";
	ПутьКВременномуФайлу = КаталогВременныхФайлов() + "v8cscdsc.lst";	
	ИмяСервера = ?(Соединение = Неопределено, ПолучитьИмяСервераОбновлений(), Соединение.Сервер);
	Если ЗагрузитьФайлСРесурса(ПолучитьИмяСервераОбновлений(), ПутьКФайлуСпискаНаСервере, ПутьКВременномуФайлу, Соединение) Тогда	
		Чтение = Новый ЧтениеТекста(ПутьКВременномуФайлу,КодировкаТекста.UTF8);
		Результат = Чтение.Прочитать();		
		Чтение.Закрыть(); Чтение = Неопределено;
		Результат = СтрЗаменить(Результат, Символы.ПС, "");
		Результат = СтрЗаменить(Результат, Символы.НПП, "");			
	КонецЕсли;
	Попытка УдалитьФайлы(ПутьКВременномуФайлу); Исключение КонецПопытки;	
	Возврат Результат;	
КонецФункции

&НаСервере
//
//
Функция ПолучитьТаблицуИмеющихсяОбновлений() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РелизыОбновлений.Ссылка,
		|	РелизыОбновлений.Наименование,
		|	РелизыОбновлений.ВидКонфигурации,
		|	РелизыОбновлений.НомерДляСортировки,
		|	ВидыКонфигураций.Наименование КАК ВидКонфигурацииНаименование,
		|	ВидыКонфигураций.Синоним КАК ВидКонфигурацииСиноним,
		|	ВидыКонфигураций.Редакция КАК Редакция,
		|	ВЫБОР
		|		КОГДА РелизыОбновлений.Наименование = втРелизыОбновлений.Наименование
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Актуальный
		|ИЗ
		|	Справочник.РелизыОбновлений КАК РелизыОбновлений
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыКонфигураций КАК ВидыКонфигураций
		|		ПО РелизыОбновлений.ВидКонфигурации = ВидыКонфигураций.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			РелизыОбновлений.Наименование КАК Наименование,
		|			РелизыОбновлений.ВидКонфигурации КАК ВидКонфигурации
		|		ИЗ
		|			Справочник.РелизыОбновлений КАК РелизыОбновлений
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					РелизыОбновлений.ВидКонфигурации КАК АктуальныйРелизВидКонфигурации,
		|					МАКСИМУМ(РелизыОбновлений.НомерДляСортировки) КАК АктуальныйРелизНомерДляСортировки
		|				ИЗ
		|					Справочник.ВидыКонфигураций КАК ВидыКонфигураций
		|						ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РелизыОбновлений КАК РелизыОбновлений
		|						ПО (РелизыОбновлений.ВидКонфигурации = ВидыКонфигураций.Ссылка)
		|							И (ВЫБОР
		|								КОГДА (ВЫРАЗИТЬ(ВидыКонфигураций.Редакция КАК СТРОКА(50))) <> """"
		|									ТОГДА ВЫБОР
		|											КОГДА РелизыОбновлений.Наименование ПОДОБНО (ВЫРАЗИТЬ(ВидыКонфигураций.Редакция КАК СТРОКА(50))) + ""%""
		|												ТОГДА ИСТИНА
		|											ИНАЧЕ ЛОЖЬ
		|										КОНЕЦ
		|								ИНАЧЕ ИСТИНА
		|							КОНЕЦ)
		|				ГДЕ
		|					НЕ РелизыОбновлений.ПометкаУдаления
		|				
		|				СГРУППИРОВАТЬ ПО
		|					РелизыОбновлений.ВидКонфигурации) КАК тАктуальныеРелизыОбновлений
		|				ПО РелизыОбновлений.ВидКонфигурации = тАктуальныеРелизыОбновлений.АктуальныйРелизВидКонфигурации
		|					И РелизыОбновлений.НомерДляСортировки = тАктуальныеРелизыОбновлений.АктуальныйРелизНомерДляСортировки) КАК втРелизыОбновлений
		|		ПО (ВидыКонфигураций.Ссылка = втРелизыОбновлений.ВидКонфигурации)
		|ГДЕ
		|	НЕ РелизыОбновлений.ПометкаУдаления
		|	И РелизыОбновлений.ВидКонфигурации В(&ВидыКонфигураций)";

	Запрос.Параметры.Вставить("ВидыКонфигураций", ЭтотОбъект.ВидыКонфигураций.ВыгрузитьКолонку("ВидКонфигурации"));
	ТаблицаИмеющихсяОбновлений = Запрос.Выполнить().Выгрузить();	
	ТаблицаИмеющихсяОбновлений.Индексы.Добавить("Наименование, ВидКонфигурации");
	
	Возврат ТаблицаИмеющихсяОбновлений;
	
КонецФункции

&НаСервере
//
//
Процедура ПроверитьНаличиеОбновлений(Соединение = Неопределено, СодержимоеСпискаОбновлений = Неопределено, КлючФоновогоЗадания = Неопределено, ТекстСтатусаФоновогоЗадания = "") Экспорт
	Перем НоваяСтрока;
	
	ТаблицаИмеющихсяОбновлений = ПолучитьТаблицуИмеющихсяОбновлений();
	ТаблицаИмеющихсяОбновлений.Индексы.Добавить("Наименование, ВидКонфигурации");
	
	ТаблицаАктуальныхРелизов = ТаблицаИмеющихсяОбновлений.Скопировать(Новый Структура("Актуальный", Истина));
	ТаблицаАктуальныхРелизов.Индексы.Добавить("ВидКонфигурации");
	КэшАктуальныеРелизы = Новый Соответствие;
	
	// подключаемся к ресурсу обновлений
	Если Соединение = Неопределено Тогда 
		Соединение = ПолучитьПодкючениеКРесурсу(ПолучитьИмяСервераОбновлений());
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура();
	
	// получаем список актуальных обновлений
	Если СодержимоеСпискаОбновлений = Неопределено Тогда 
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.КэшСодержимоеСпискаОбновлений) Тогда 		
			ЭтотОбъект.КэшСодержимоеСпискаОбновлений = ПолучитьСодержимоеСпискаОбновленийССервера(Соединение);
		КонецЕсли;
		СодержимоеСпискаОбновлений = ЭтотОбъект.КэшСодержимоеСпискаОбновлений;
	КонецЕсли;
	ЭтотОбъект.ДоступныеОбновления.Очистить();
	Если ЗначениеЗаполнено(СодержимоеСпискаОбновлений) Тогда
		Для Каждого ТекущаяСтрока Из ЭтотОбъект.ВидыКонфигураций Цикл			
			
			// ищем начало блока с информацией о виде конфигурации
			ВременноеЗначениеСодержимоеСпискаОбновлений = СодержимоеСпискаОбновлений;
			
			ТэгНачалаБлокаВидаКонфигурации = "{{""" + СокрЛП(ТекущаяСтрока.ВидКонфигурации.Наименование) + """,";
			НачалоАнализируемогоБлокаВидаКонфигурации = Найти(ВременноеЗначениеСодержимоеСпискаОбновлений, ТэгНачалаБлокаВидаКонфигурации);
			Если НачалоАнализируемогоБлокаВидаКонфигурации = 0 Тогда
				ТэгНачалаБлокаВидаКонфигурации = "{{""" + СокрЛП(ТекущаяСтрока.ВидКонфигурации.Синоним) + """,";
				НачалоАнализируемогоБлокаВидаКонфигурации = Найти(ВременноеЗначениеСодержимоеСпискаОбновлений, ТэгНачалаБлокаВидаКонфигурации);
			КонецЕсли;
			
			Пока НачалоАнализируемогоБлокаВидаКонфигурации <> 0 Цикл							
				ВременноеЗначениеСодержимоеСпискаОбновлений = Сред(ВременноеЗначениеСодержимоеСпискаОбновлений, НачалоАнализируемогоБлокаВидаКонфигурации);
				
				// ищем позицию с информацией о файле 
				ТэгФайлаИнформацииОбОбновлении = "1cv8.mft";
				ПозицияБлокаФайлаИнформацииОбОбновлении = Найти(ВременноеЗначениеСодержимоеСпискаОбновлений, ТэгФайлаИнформацииОбОбновлении);								
				АнализиремыйБлокФайлаИнформацииОбОбновлении = Лев(ВременноеЗначениеСодержимоеСпискаОбновлений, ПозицияБлокаФайлаИнформацииОбОбновлении - 1);
				
				// парсим информацию об обновлении
				КоличествоОткрытыхБлоков = -1;
				ПозицияНачалаБлокаUpdInfo = 0;
				ПозицияКонцаБлокаUpdInfo = 0;
				ПозицияНачалаИнформацииОСетевомКаталоге = 0;				
				ПозицияВСтроке = ПозицияБлокаФайлаИнформацииОбОбновлении;				
				Пока ПозицияВСтроке > 0 Цикл
					ТекущийСимвол = Сред(АнализиремыйБлокФайлаИнформацииОбОбновлении, ПозицияВСтроке, 1);
					Если ТекущийСимвол = "{" Тогда
						КоличествоОткрытыхБлоков = КоличествоОткрытыхБлоков - 1;
						Если КоличествоОткрытыхБлоков = 0 Тогда
							ПозицияНачалаБлокаUpdInfo = ПозицияВСтроке + 1;
							Прервать; 
						КонецЕсли;
					ИначеЕсли ТекущийСимвол = "}" Тогда
						Если ПозицияКонцаБлокаUpdInfo = 0 И КоличествоОткрытыхБлоков = 0 Тогда ПозицияКонцаБлокаUpdInfo = ПозицияВСтроке - 1; КонецЕсли;
						КоличествоОткрытыхБлоков = КоличествоОткрытыхБлоков + 1;
					ИначеЕсли ТекущийСимвол = """" И ПозицияНачалаИнформацииОСетевомКаталоге = 0 Тогда
						ПозицияНачалаИнформацииОСетевомКаталоге = ПозицияВСтроке;
					КонецЕсли;
					ПозицияВСтроке = ПозицияВСтроке - 1;
				КонецЦикла;
				
				// собираем информацию-аналог UpdInfo
				UpdInfo = "";
				Если ПозицияКонцаБлокаUpdInfo > ПозицияНачалаБлокаUpdInfo И ПозицияКонцаБлокаUpdInfo <> 0 И ПозицияНачалаБлокаUpdInfo <> 0 Тогда
					СодержимоеБлокаUpdInfo = Сред(АнализиремыйБлокФайлаИнформацииОбОбновлении, ПозицияНачалаБлокаUpdInfo, ПозицияКонцаБлокаUpdInfo - ПозицияНачалаБлокаUpdInfo) + ",";
					МассивБолокОбновляемыхРелизов = ОбщегоНазначенияСервер.РазложитьСтрокуВМассивПодстрок(СодержимоеБлокаUpdInfo, "},");
					Для Каждого ЭлементМассиваБлоковОбновлнийРелизов Из МассивБолокОбновляемыхРелизов Цикл
						ТекущийБлокОбновляемыхРелизов = СтрЗаменить(ЭлементМассиваБлоковОбновлнийРелизов, "{", "");
						МассивЭлементовБлокаОбновляемыхРелизов = ОбщегоНазначенияСервер.РазложитьСтрокуВМассивПодстрок(ТекущийБлокОбновляемыхРелизов, ",");
						Если МассивЭлементовБлокаОбновляемыхРелизов.Количество() >=3 Тогда
							UpdInfo = СтрЗаменить(МассивЭлементовБлокаОбновляемыхРелизов[2], """", "") + ";" + UpdInfo;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				Если ПозицияНачалаИнформацииОСетевомКаталоге > 0 Тогда
					// загружаем информацию о релизе во временный каталог
					СетевойКаталогОбновления = СтрЗаменить(Сред(АнализиремыйБлокФайлаИнформацииОбОбновлении, ПозицияНачалаИнформацииОСетевомКаталоге, ПозицияБлокаФайлаИнформацииОбОбновлении - ПозицияНачалаИнформацииОСетевомКаталоге + СтрДлина(ТэгФайлаИнформацииОбОбновлении)), """", "");
					СетевойКаталогОбновления = СтрЗаменить(СетевойКаталогобновления, ТэгФайлаИнформацииОбОбновлении, "");
					СетевойКаталогОбновления = СетевойКаталогОбновления + ?(Прав(СетевойКаталогОбновления, 1) = "/", "", "/");
					ПутьКВременномуФайлуИнформацииОбОбновлении = КаталогВременныхФайлов() + ТэгФайлаИнформацииОбОбновлении;
					Если ЗагрузитьФайлСРесурса(Соединение.Сервер, "tmplts/" + СетевойКаталогОбновления + ТэгФайлаИнформацииОбОбновлении, ПутьКВременномуФайлуИнформацииОбОбновлении, Соединение, Ложь) Тогда					
						
						АктуальныйРелизВидаКонфигурации = КэшАктуальныеРелизы.Получить(ТекущаяСтрока.ВидКонфигурации);
						Если АктуальныйРелизВидаКонфигурации = Неопределено Тогда
							НайденнаяСтрокаАктуальногоРелиза = ТаблицаАктуальныхРелизов.Найти(ТекущаяСтрока.ВидКонфигурации, "ВидКонфигурации");
							Если НЕ НайденнаяСтрокаАктуальногоРелиза = Неопределено Тогда
								АктуальныйРелизВидаКонфигурации = НайденнаяСтрокаАктуальногоРелиза.НомерДляСортировки;
							КонецЕсли;
							КэшАктуальныеРелизы.Вставить(ТекущаяСтрока.ВидКонфигурации, АктуальныйРелизВидаКонфигурации);
						КонецЕсли;
						
						// читаем информацию о релизе
						Данные_1cv8_mft = Справочники.РелизыОбновлений.Прочитать_1cv8_mft(ПутьКВременномуФайлуИнформацииОбОбновлении);
						Если Данные_1cv8_mft.Свойство("Version") И Лев(Данные_1cv8_mft.Version, СтрДлина(ТекущаяСтрока.Редакция)) = ТекущаяСтрока.Редакция
							И (НЕ ЭтотОбъект.ЗагружатьТолькоНовые ИЛИ НЕ ЗначениеЗаполнено(АктуальныйРелизВидаКонфигурации) ИЛИ ЭтотОбъект.ЗагружатьТолькоНовые И АктуальныйРелизВидаКонфигурации <= ОбщегоНазначенияСервер.ДополнитьНулямиЧисловыеЗначенияСтрокиРелиза(Данные_1cv8_mft.Version)) Тогда
							
							ПараметрыОтбора.Очистить();
							ПараметрыОтбора.Вставить("Наименование", Данные_1cv8_mft.Version); 
							ПараметрыОтбора.Вставить("ВидКонфигурации", ТекущаяСтрока.ВидКонфигурации);
							НайденныеОбновленияСТекущимНомером = ТаблицаИмеющихсяОбновлений.НайтиСтроки(ПараметрыОтбора);
														
							ТэгФайлаUpdInfo = "UpdInfо.txt";
							ПутьКВременномуФайлуUpdInfo = КаталогВременныхФайлов() + ТэгФайлаUpdInfo;
							Если ЗагрузитьФайлСРесурса(Соединение.Сервер, СетевойКаталогОбновления + ПутьКВременномуФайлуUpdInfo, ПутьКВременномуФайлуUpdInfo, Соединение, Ложь) Тогда
								Данные_UpdInfo = Справочники.РелизыОбновлений.Прочитать_UpdInfo(ПутьКВременномуФайлуUpdInfo);
								Если Данные_UpdInfo.Свойство("FromVersions") Тогда
									UpdInfo = Данные_UpdInfo.FromVersions;
								КонецЕсли;
							КонецЕсли;
							Попытка УдалитьФайлы(ПутьКВременномуФайлуUpdInfo); Исключение КонецПопытки;
							
							ПараметрыОтбора.Очистить();
							ПараметрыОтбора.Вставить("НомерРелиза", Данные_1cv8_mft.Version); 
							ПараметрыОтбора.Вставить("ВидКонфигурации", ТекущаяСтрока.ВидКонфигурации);
							МассивСтрокДоступныхОбновленийСТекущимНомером = ЭтотОбъект.ДоступныеОбновления.НайтиСтроки(ПараметрыОтбора);
							Если МассивСтрокДоступныхОбновленийСТекущимНомером.Количество() = 0 Тогда							
								НоваяСтрока = ЭтотОбъект.ДоступныеОбновления.Добавить();							
								ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
								НоваяСтрока.Загрузить = (НайденныеОбновленияСТекущимНомером.Количество() = 0);								
								НоваяСтрока.СетевойКаталог = СтрЗаменить(СетевойКаталогобновления, ТэгФайлаИнформацииОбОбновлении, "");
								НоваяСтрока.НомерРелиза = Данные_1cv8_mft.Version;
								НоваяСтрока.UpdInfo = UpdInfo;
							Иначе 
								НоваяСтрока = МассивСтрокДоступныхОбновленийСТекущимНомером[0];
								НоваяСтрока.UpdInfo = НоваяСтрока.UpdInfo + UpdInfo;         
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					Попытка УдалитьФайлы(ПутьКВременномуФайлуИнформацииОбОбновлении); Исключение КонецПопытки;
				КонецЕсли;
				
				// информация о ходе обновления
				Если КлючФоновогоЗадания <> Неопределено Тогда
					ПодписьИндикатора = ТекстСтатусаФоновогоЗадания + " [идентифицированно релизов " + ЭтотОбъект.ДоступныеОбновления.Количество() + "]";
					ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(					
					1, 
					ПодписьИндикатора,
					"ЭтаФорма.Элементы.ИндикаторПроцесса.Заголовок = """ + ПодписьИндикатора + """;");
				КонецЕсли;												
								
				ВременноеЗначениеСодержимоеСпискаОбновлений = Сред(ВременноеЗначениеСодержимоеСпискаОбновлений, ПозицияБлокаФайлаИнформацииОбОбновлении);
				
				НачалоАнализируемогоБлокаВидаКонфигурации = Найти(ВременноеЗначениеСодержимоеСпискаОбновлений, ТэгНачалаБлокаВидаКонфигурации);
			КонецЦикла;
		КонецЦикла;
	Иначе
		СодержаниеОшибки = "Список обновлений пуст, либо не загружен.";
		ОбщегоНазначенияСервер.ВывестиСообщение(СодержаниеОшибки);
		ЗаписьЖурналаРегистрации(мИмяСобытияВЖурналеРегистрации, УровеньЖурналаРегистрации.Информация,,, СодержаниеОшибки);
	КонецЕсли;
	Соединение = Неопределено;
	ЭтотОбъект.ДоступныеОбновления.Сортировать("ВидКонфигурации, НомерРелиза Убыв");
КонецПроцедуры

&НаСервере
//
//
Процедура ЗагрузитьОбновления() Экспорт
	
	ИменаФайловОбновленияДляЗагрузки = Новый Массив;	
	ИменаФайловОбновленияДляЗагрузки.Добавить("1cv8.mft");	
	ИменаФайловОбновленияДляЗагрузки.Добавить("1cv8.cfu");
	ИменаФайловОбновленияДляЗагрузки.Добавить("1Cv8.cfu");
	ИменаФайловОбновленияДляЗагрузки.Добавить("1cv8.cf");
	ИменаФайловОбновленияДляЗагрузки.Добавить("1cv8.zip");
	ИменаФайловОбновленияДляЗагрузки.Добавить("1cv8upd.htm");	
	ИменаФайловОбновленияДляЗагрузки.Добавить("enaof.xml");
	ИменаФайловОбновленияДляЗагрузки.Добавить("okof.xml");
	ИменаФайловОбновленияДляЗагрузки.Добавить("ReadMe.txt");
	ИменаФайловОбновленияДляЗагрузки.Добавить("UpdInfо.txt");
	ИменаФайловОбновленияДляЗагрузки.Добавить("updsetup.exe");
	ИменаФайловОбновленияДляЗагрузки.Добавить("updsetup.zip");
	ИменаФайловОбновленияДляЗагрузки.Добавить("setup.exe");
	ИменаФайловОбновленияДляЗагрузки.Добавить("setup.zip");
	
	Если ЭтотОбъект.ДоступныеОбновления.Количество() > 0 Тогда
		
		Соединение = ПолучитьПодкючениеКРесурсу(ПолучитьИмяСервераОбновлений());
		КаталогОбновлений = Константы.КаталогОбновлений.Получить();
		Если ЗначениеЗаполнено(КаталогОбновлений) Тогда 
			КаталогОбновлений = КаталогОбновлений +  ?(Прав(КаталогОбновлений, 1) = "\", "", "\");
		КонецЕсли;
		
		ПараметрыОтбора = Новый Структура();
		ТаблицаИмеющихсяОбновлений = ПолучитьТаблицуИмеющихсяОбновлений();		
		
		Для Каждого ТекущаяСтрока Из ЭтотОбъект.ДоступныеОбновления Цикл
			Если ТекущаяСтрока.Загрузить Тогда
				Если ЗначениеЗаполнено(ТекущаяСтрока.СетевойКаталог) И ЗначениеЗаполнено(ТекущаяСтрока.НомерРелиза) Тогда
									
					ФайловЗагружено = 0;
					ЗагружаемВКаталогОбновлений = Истина;
					ВременныйКаталогЗагрузкиДанных = КаталогОбновлений + СтрЗаменить(ТекущаяСтрока.СетевойКаталог, "/", "\");
					Если НЕ ЗначениеЗаполнено(КаталогОбновлений) Тогда
						// будем грузить во временный каталог
						ЗагружаемВКаталогОбновлений = Ложь;
						ВременныйКаталогЗагрузкиДанных = КаталогВременныхФайлов() + СтрЗаменить(ТекущаяСтрока.СетевойКаталог, "/", "_") + "\";
					Иначе
						// создаем иерархию подкаталогов
						ТекущийПодкаталог = КаталогОбновлений;
						МассивПодкаталогов = ОбщегоНазначенияСервер.РазложитьСтрокуВМассивПодстрок(ТекущаяСтрока.СетевойКаталог, "/");
						Для Каждого ИмяПодкаталога Из МассивПодкаталогов Цикл
							Если ЗначениеЗаполнено(ИмяПодкаталога) Тогда
								ТекущийПодкаталог = ТекущийПодкаталог + ИмяПодкаталога + "\";								
								КаталогНаДиске = Новый Файл(ТекущийПодкаталог);
								Если Не КаталогНаДиске.Существует() Тогда								
									СоздатьКаталог(ТекущийПодкаталог);
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;

					НачатьТранзакцию();
					Попытка
						
						СоздатьКаталог(ВременныйКаталогЗагрузкиДанных);
												
						Для Каждого ТекущееИмяФайлаФайлОбновления Из ИменаФайловОбновленияДляЗагрузки Цикл
							ЗагрузитьФайлСРесурса(Соединение.Сервер, "tmplts/" + ТекущаяСтрока.СетевойКаталог + ТекущееИмяФайлаФайлОбновления, ВременныйКаталогЗагрузкиДанных  + ТекущееИмяФайлаФайлОбновления, Соединение, Ложь);
						КонецЦикла;
						
						ФайлыАрхива = НайтиФайлы(ВременныйКаталогЗагрузкиДанных, "*.zip", Ложь);
						Если ФайлыАрхива.Количество() <> 0 Тогда
							Для Каждого ТекущийФайлАрхива Из ФайлыАрхива Цикл
								ЧтениеZipФайла = Новый ЧтениеZipФайла(ТекущийФайлАрхива.ПолноеИмя);
								ЧтениеZipФайла.ИзвлечьВсе(ВременныйКаталогЗагрузкиДанных, РежимВосстановленияПутейФайловZIP.Восстанавливать);
								ЧтениеZipФайла.Закрыть();
								Попытка
									УдалитьФайлы(ТекущийФайлАрхива.ПолноеИмя);
								Исключение
								КонецПопытки;
							КонецЦикла;
						КонецЕсли;
						
						ФайлыКонфигураций = НайтиФайлы(ВременныйКаталогЗагрузкиДанных, "*.cf", Ложь);
						ФайлыОбновлений = НайтиФайлы(ВременныйКаталогЗагрузкиДанных, "*.cfu", Ложь);						
	
						Если ФайлыОбновлений.Количество() <> 0 ИЛИ ФайлыКонфигураций.Количество() <> 0 Тогда
							
							ПараметрыОтбора.Очистить();
							ПараметрыОтбора.Вставить("Наименование", ТекущаяСтрока.НомерРелиза); 
							ПараметрыОтбора.Вставить("ВидКонфигурации", ТекущаяСтрока.ВидКонфигурации);
							НайденныеОбновленияСТекущимНомером = ТаблицаИмеющихсяОбновлений.НайтиСтроки(ПараметрыОтбора);
							
							Если НайденныеОбновленияСТекущимНомером.Количество() > 0  Тогда
								РелизОбновления = НайденныеОбновленияСТекущимНомером[0].Ссылка.ПолучитьОбъект();
							Иначе 
								РелизОбновления = Справочники.РелизыОбновлений.СоздатьЭлемент();
								РелизОбновления.Наименование = ТекущаяСтрока.НомерРелиза;
								РелизОбновления.ВидКонфигурации = ТекущаяСтрока.ВидКонфигурации;
							КонецЕсли;
								РелизОбновления.UpdInfo = ТекущаяСтрока.UpdInfo;
								РелизОбновления.Каталог = ?(ЗагружаемВКаталогОбновлений, ВременныйКаталогЗагрузкиДанных, "");
								РелизОбновления.Записать();
							
							
							// для понта закинем файлик :)
							ИмяФайлаUpdInfo = "UpdInfo.txt";
							ФайлыUpdInfo = НайтиФайлы(ВременныйКаталогЗагрузкиДанных, ИмяФайлаUpdInfo, Ложь);
							Если ФайлыUpdInfo.Количество() = 0 Тогда
								ЗаписьUpdInfo = Новый ЗаписьТекста(ВременныйКаталогЗагрузкиДанных + ИмяФайлаUpdInfo);
								ЗаписьUpdInfo.ЗаписатьСтроку("Version=" + СокрЛП(РелизОбновления.Наименование));
								ЗаписьUpdInfo.ЗаписатьСтроку("FromVersions=" + СокрЛП(РелизОбновления.UpdInfo));
								ЗаписьUpdInfo.Закрыть();
								ЗаписьUpdInfo = Неопределено;
							КонецЕсли;
														
							Если ЭтотОбъект.ЗагружатьРелизыОбновленийВХранилище Тогда
								// загружаем архив
								Справочники.РелизыОбновлений.СоздатьЗаписьАрхиваНаСервере(РелизОбновления.Ссылка);														
								РегистрыСведений.ХранилищеРелизовОбновлений.ЗагрузитьДвоичныеДанныеАрхиваИзКаталога(РелизОбновления.Ссылка, ВременныйКаталогЗагрузкиДанных);
							КонецЕсли;
							
							ЗафиксироватьТранзакцию();
							
							ТекущаяСтрока.Загрузить = Ложь;
							
							СодержаниеОшибки = "Загружено обновление [" + ТекущаяСтрока.ВидКонфигурации + "] " + ТекущаяСтрока.НомерРелиза;							
							ЗаписьЖурналаРегистрации(мИмяСобытияВЖурналеРегистрации, УровеньЖурналаРегистрации.Информация,,, СодержаниеОшибки);
							
						Иначе
							ВызватьИсключение "Не загружены файлы из сетевого каталога";							
						КонецЕсли;
						
						
					Исключение
						ОтменитьТранзакцию();
						СодержаниеОшибки = "Ошибка загрузки данных. Номер строки " + ТекущаяСтрока.НомерСтроки + ": " + ОписаниеОшибки();
						ОбщегоНазначенияСервер.ВывестиСообщение(СодержаниеОшибки);
						ЗаписьЖурналаРегистрации(мИмяСобытияВЖурналеРегистрации, УровеньЖурналаРегистрации.Ошибка,,, СодержаниеОшибки);
					КонецПопытки;
					
					Если НЕ ЗагружаемВКаталогОбновлений Тогда
						Попытка УдалитьФайлы(ВременныйКаталогЗагрузкиДанных); Исключение КонецПопытки;
					КонецЕсли;
					
				Иначе
					СодержаниеОшибки = "Ошибка в заполнении данных. Номер строки " + ТекущаяСтрока.НомерСтроки;
					ОбщегоНазначенияСервер.ВывестиСообщение(СодержаниеОшибки);
					ЗаписьЖурналаРегистрации(мИмяСобытияВЖурналеРегистрации, УровеньЖурналаРегистрации.Ошибка,,, СодержаниеОшибки);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Соединение = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

мИмяСобытияВЖурналеРегистрации = "UpdatesDownload";
ЭтотОбъект.ЗагружатьРелизыОбновленийВХранилище = Истина;
ЭтотОбъект.ЗагружатьТолькоНовые = Истина;