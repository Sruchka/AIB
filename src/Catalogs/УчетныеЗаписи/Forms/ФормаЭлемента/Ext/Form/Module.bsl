
&НаКлиенте
//
//
Процедура УправлениеЭлементамиФормы()	
	ЭтоУчетнаяЗаписьИБ = (Объект.ТипУчетнойЗаписи = ПредопределенноеЗначение("Перечисление.ТипыУчетныхЗаписей.УчетнаяЗаписьИБ"));
	ЭтоУчетнаяЗаписьХранилищаКонфигураций = (Объект.ТипУчетнойЗаписи = ПредопределенноеЗначение("Перечисление.ТипыУчетныхЗаписей.УчетнаяЗаписьХранилищаКонфигураций"));
	
	Элементы.КодБлокировкиСеансов.Видимость = ЭтоУчетнаяЗаписьИБ;
	Элементы.КодБлокировкиСеансов.Доступность = ЭтоУчетнаяЗаписьИБ;
	
	Если ЗначениеЗаполнено(Объект.КодБлокировкиСеансов) И НЕ ЭтоУчетнаяЗаписьИБ Тогда
		Объект.КодБлокировкиСеансов = "";
	КонецЕсли;
	
	Если Объект.АвторизацияWindows И ЭтоУчетнаяЗаписьХранилищаКонфигураций Тогда
		Объект.АвторизацияWindows = Ложь;
	КонецЕсли;
	Элементы.АвторизацияWindows.Видимость = НЕ ЭтоУчетнаяЗаписьХранилищаКонфигураций;
	Элементы.АвторизацияWindows.Доступность = НЕ ЭтоУчетнаяЗаписьХранилищаКонфигураций;
	
	
	Элементы.Пароль.Видимость = НЕ Объект.АвторизацияWindows;
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ТипУчетнойЗаписиПриИзменении(Элемент)
	УправлениеЭлементамиФормы();
КонецПроцедуры

&НаКлиенте
//
//
Процедура ПриОткрытии(Отказ)
	УправлениеЭлементамиФормы();
КонецПроцедуры

&НаКлиенте
//
//
Процедура АвторизацияWindowsПриИзменении(Элемент)
	УправлениеЭлементамиФормы();
КонецПроцедуры
