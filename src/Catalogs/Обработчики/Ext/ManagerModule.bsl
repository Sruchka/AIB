
//
//
Процедура ВосстановитьЗаполнениеПредопределенныхЭлементов(МассивСсылок = Неопределено) Экспорт
	Если МассивСсылок = Неопределено Тогда МассивСсылок = Новый Массив; КонецЕсли;
	ПредопределенныеДанныеОбработчиков = Справочники.Обработчики;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Обработчики.Ссылка
		|ИЗ
		|	Справочник.Обработчики КАК Обработчики
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ЕстьОтбор
		|				ТОГДА Обработчики.Ссылка В (&МассивСсылок)
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И Обработчики.Предопределенный";
	Запрос.Параметры.Вставить("ЕстьОтбор", МассивСсылок.Количество() > 0);
	Запрос.Параметры.Вставить("МассивСсылок", МассивСсылок);
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Ссылка = ПредопределенныеДанныеОбработчиков.ОбновлениеИББухгалтерия20 Тогда 
			ТекущийОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			ТекущийОбъект.КодОбработчика = ПолучитьМакет("ОбновлениеИББухгалтерия20").ПолучитьТекст();
			ТекущийОбъект.КонтекстИсполнения = Перечисления.КонтекстыИсполненияОбработчиков.КонтекстВнешнегоПодключения;
			ТекущийОбъект.ТипОбработчика = Перечисления.ТипыОбработчиков.Обработчик1СПредприятие;
			ТекущийОбъект.Записать();
		ИначеЕсли ВыборкаДетальныеЗаписи.Ссылка = ПредопределенныеДанныеОбработчиков.ОбновлениеИББухгалтерия30 Тогда 
			ТекущийОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			ТекущийОбъект.КодОбработчика = ПолучитьМакет("ОбновлениеИББухгалтерия30").ПолучитьТекст();
			ТекущийОбъект.КонтекстИсполнения = Перечисления.КонтекстыИсполненияОбработчиков.КонтекстВнешнегоПодключения;
			ТекущийОбъект.ТипОбработчика = Перечисления.ТипыОбработчиков.Обработчик1СПредприятие;
			ТекущийОбъект.Записать();
		ИначеЕсли ВыборкаДетальныеЗаписи.Ссылка = ПредопределенныеДанныеОбработчиков.ПослеДобавленияПользователяБП30 Тогда 
			ТекущийОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			ТекущийОбъект.КодОбработчика = ПолучитьМакет("ПослеДобавленияПользователяБП30").ПолучитьТекст();
			ТекущийОбъект.КонтекстИсполнения = Перечисления.КонтекстыИсполненияОбработчиков.КонтекстВнешнегоПодключения;
			ТекущийОбъект.ТипОбработчика = Перечисления.ТипыОбработчиков.Обработчик1СПредприятие;
			ТекущийОбъект.Записать();
		ИначеЕсли ВыборкаДетальныеЗаписи.Ссылка = ПредопределенныеДанныеОбработчиков.ИнформацияОБлокировкахSQL Тогда 
			ТекущийОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			ТекущийОбъект.КодОбработчика = ПолучитьМакет("ИнформацияОБлокировкахSQL").ПолучитьТекст();
			ТекущийОбъект.КонтекстИсполнения = Перечисления.КонтекстыИсполненияОбработчиков.КонтекстВнешнегоПодключения;
			ТекущийОбъект.ТипОбработчика = Перечисления.ТипыОбработчиков.ОбработчикSQL;
			ТекущийОбъект.Комментарий = "Источник: http://infostart.ru/public/193674/";
			ТекущийОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//
//
Функция СохранитьВФайл(Ссылка, ПолноеИмяФайла) Экспорт
	
	Результат = Ложь;
	
	Попытка
	
		ТекущийОбъект = Ссылка.ПолучитьОбъект();
		
		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.ОткрытьФайл(ПолноеИмяФайла);
		ЗаписьXML.ЗаписатьОбъявлениеXML();	
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Обработчик");
		
			ЗаписьXML.ЗаписатьНачалоЭлемента("Наименование");
				ЗаписьXML.ЗаписатьТекст(ТекущийОбъект.Наименование);
			ЗаписьXML.ЗаписатьКонецЭлемента();
		
			ЗаписьXML.ЗаписатьНачалоЭлемента("Комментарий");
				ЗаписьXML.ЗаписатьТекст(ТекущийОбъект.Комментарий);
			ЗаписьXML.ЗаписатьКонецЭлемента();			
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("КодОбработчика");
				ЗаписьXML.ЗаписатьТекст(ТекущийОбъект.КодОбработчика);				
			ЗаписьXML.ЗаписатьКонецЭлемента();
						
	        ЗаписьXML.ЗаписатьНачалоЭлемента("КонтекстИсполнения");
	        	ЗаписьXML.ЗаписатьТекст(XMLСтрока(ТекущийОбъект.КонтекстИсполнения));
	        ЗаписьXML.ЗаписатьКонецЭлемента();
			
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		ЗаписьXML.Закрыть();
		
		Результат = Истина;
	
	Исключение
		
		СообщениеОбОшибке = "Ошибка сохранения файла: " + ОписаниеОшибки();
		Сообщить(СообщениеОбОшибке);
		ЗаписьЖурналаРегистрации("СохранениеФайлаОбработчика", УровеньЖурналаРегистрации.Ошибка, ТекущийОбъект, Ссылка, СообщениеОбОшибке);
		Результат = Ложь;
		
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

//
//
Функция ЗагрузитьИзФайла(Ссылка, ПолноеИмяФайла, СоздаватьНовый) Экспорт
	
	Результат = Ложь;
	
	Попытка
		
		Если СоздаватьНовый Тогда 
			ТекущийОбъект = Справочники.Обработчики.СоздатьЭлемент();
		Иначе 
			ТекущийОбъект = Ссылка.ПолучитьОбъект();
		КонецЕсли;
		
		ТипСтрока = Тип("Строка");
		
		ПравилаТрансляцииДанных = Новый Соответствие;		
		ПравилаТрансляцииДанных.Вставить("Наименование", ТипСтрока);
		ПравилаТрансляцииДанных.Вставить("Комментарий", ТипСтрока);
		ПравилаТрансляцииДанных.Вставить("КодОбработчика", ТипСтрока);
		ПравилаТрансляцииДанных.Вставить("КонтекстИсполнения", Тип("ПеречислениеСсылка.КонтекстыИсполненияОбработчиков"));		
		
		ЧтениеXML = Новый ЧтениеXML;		
		ЧтениеXML.ОткрытьФайл(ПолноеИмяФайла);						
		
		ТекущееПоле = "";
		ТекущийТип = "";
		флФорматСоответствует = Ложь;
		флЗаписывать = Ложь;
		Пока ЧтениеXML.Прочитать() Цикл			
			
			Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				
				Если ЧтениеXML.ЛокальноеИмя  = "Обработчик" Тогда
					флФорматСоответствует = Истина;
				Иначе
					ТекущийТип = ПравилаТрансляцииДанных.Получить(ЧтениеXML.Имя);
					Если ТекущийТип <> Неопределено Тогда
						ТекущееПоле = ЧтениеXML.Имя;
						ТекущийТип = ТекущийТип;
					Иначе 
						флФорматСоответствует = Ложь;
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
				
				ТекущийОбъект[ТекущееПоле] = XMLЗначение(ТекущийТип, ЧтениеXML.Значение);
				флЗаписывать = Истина;
				
			КонецЕсли;
			
			Если НЕ флФорматСоответствует Тогда
				ВызватьИсключение "Ошибка формата файла";
			КонецЕсли;
			
		КонецЦикла;
		
		Если флЗаписывать Тогда
			ТекущийОбъект.Записать();
		КонецЕсли;
		
		Результат = Истина;
	
	Исключение
		
		СообщениеОбОшибке = "Ошибка загрузки из файла: " + ОписаниеОшибки();
		Сообщить(СообщениеОбОшибке);
		ЗаписьЖурналаРегистрации("СохранениеФайлаОбработчика", УровеньЖурналаРегистрации.Ошибка, ТекущийОбъект, Ссылка, СообщениеОбОшибке);
		Результат = Ложь;
		
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции
