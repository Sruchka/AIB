
//
//
Функция ВыделитьНомерРелизаИзКаталогаПлатформы(Каталог) Экспорт
	
	НомерРелизаПлатформы  = "";
	
	СтрКаталог = СокрЛП(СтрЗаменить(Каталог, "\\", "\"));
	СтрКаталог = ?(Прав(СтрКаталог, 1) = "\", Лев(СтрКаталог, СтрДлина(СтрКаталог) - 1), СтрКаталог);
	
	ПозицияОкончанияНомераРелиза = Найти(СтрКаталог, "\bin") - 1;		
	Если ПозицияОкончанияНомераРелиза > 0 Тогда			
		
		флНомерОпределенКорректно = Ложь;		
		//Пока ПозицияОкончанияНомераРелиза > 0 Цикл
		//	
		//	ТекущийСимвол = Сред(СтрКаталог, ПозицияОкончанияНомераРелиза);				
		//	Если ТекущийСимвол = "\" Тогда
		//		флНомерОпределенКорректно = Истина;
		//		Прервать;
		//	КонецЕсли;
		//	
		//	НомерРелизаПлатформы = ТекущийСимвол + НомерРелизаПлатформы;
		//	
		//	ПозицияОкончанияНомераРелиза = ПозицияОкончанияНомераРелиза - 1;
		//КонецЦикла;
		
		ДанныеКаталогаПлатформы = Новый ФиксированныйМассив(ОбщегоНазначенияСервер.РазложитьСтрокуВМассивПодстрок(СтрКаталог, "\"));
		КоличествоПодкаталогов = ДанныеКаталогаПлатформы.Количество();
		Если КоличествоПодкаталогов > 2 Тогда
			
			Если ДанныеКаталогаПлатформы[КоличествоПодкаталогов - 1] = "bin" Тогда
				НомерРелизаПлатформы = ДанныеКаталогаПлатформы[КоличествоПодкаталогов - 2];
				флНомерОпределенКорректно = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
		
		Если НЕ флНомерОпределенКорректно Тогда			
			
			ОбщегоНазначенияСервер.ВывестиСообщение("Ошибка определения номера релиза платформы!");
			
		КонецЕсли;
		
	Иначе
		
		ОбщегоНазначенияСервер.ВывестиСообщение("Каталог платформы выбран не корректно! Необходимо указать каталог <bin> соответствующего релиза платформы.");
		
	КонецЕсли;
	
	Возврат НомерРелизаПлатформы;
	
КонецФункции

//
//
Функция ОпределитьТипCOMСоединителяПоНомеруПлатформы(Наименование) Экспорт
	
	ТипCOMСоединителя = Неопределено;
	
	ДанныеРелизаПлатформы = Новый ФиксированныйМассив(ОбщегоНазначенияСервер.РазложитьСтрокуВМассивПодстрок(Наименование, "."));
	Если ДанныеРелизаПлатформы.Количество() >= 2 Тогда
		
		Попытка
			ТипCOMСоединителя = ПредопределенноеЗначение("Перечисление.ТипыCOMСоединителя.v" + СокрЛП(ДанныеРелизаПлатформы[0]) + СокрЛП(ДанныеРелизаПлатформы[1]) + "COMConnector") ;
		Исключение
			
			ОбщегоНазначенияСервер.ВывестиСообщение("Неизвестный тип COM-соединителя!");
			
		КонецПопытки;					
		
	Иначе
		
		ОбщегоНазначенияСервер.ВывестиСообщение("Ошибка определения типа COM-соединителя!");
		
	КонецЕсли;
	
	Возврат ТипCOMСоединителя;
КонецФункции

//
//
Функция ПолучитьИнформациюПоТекущемуРелизуПлатформы(СоздаватьЭлементЕслиНеНайденРелизПлатформы = Ложь) Экспорт
	
	ИнформацияПоТекущемуРелизуПлатформы = Новый Структура();
	ИнформацияПоТекущемуРелизуПлатформы.Вставить("КаталогРелизаПлатформы", НРег(КаталогПрограммы()));
	
	ИнформацияПоТекущемуРелизуПлатформы.КаталогРелизаПлатформы = ?(Прав(ИнформацияПоТекущемуРелизуПлатформы.КаталогРелизаПлатформы, 1) = "\", ИнформацияПоТекущемуРелизуПлатформы.КаталогРелизаПлатформы, ИнформацияПоТекущемуРелизуПлатформы.КаталогРелизаПлатформы + "\");
	
	
	КаталогПрограммДляСистемы_x64 = "\program files\";
	КаталогПрограммДляСистемы_x32 = "\program files (x86)\";
	ИсполняемыйФайлПлатформы = Новый Файл(ИнформацияПоТекущемуРелизуПлатформы.КаталогРелизаПлатформы + ЗадачиНаСервере.ПолучитьИмяИсполняемогоФайлаПлатформы());
	Если НЕ ИсполняемыйФайлПлатформы.Существует() И СтрЧислоВхождений(ИнформацияПоТекущемуРелизуПлатформы.КаталогРелизаПлатформы, КаталогПрограммДляСистемы_x64) Тогда 
		 ИнформацияПоТекущемуРелизуПлатформы.КаталогРелизаПлатформы = СтрЗаменить(ИнформацияПоТекущемуРелизуПлатформы.КаталогРелизаПлатформы, КаталогПрограммДляСистемы_x64, КаталогПрограммДляСистемы_x32);
	КонецЕсли;	                                       
	
	ИнформацияПоТекущемуРелизуПлатформы.Вставить("НомерРелизаПлатформы", Справочники.РелизыТехнологическойПлатформы.ВыделитьНомерРелизаИзКаталогаПлатформы(ИнформацияПоТекущемуРелизуПлатформы.КаталогРелизаПлатформы));		
	
	ТекущийРелизПлатформы = Справочники.РелизыТехнологическойПлатформы.НайтиПоНаименованию(ИнформацияПоТекущемуРелизуПлатформы.НомерРелизаПлатформы);	
		
	Если ТекущийРелизПлатформы = Справочники.РелизыТехнологическойПлатформы.ПустаяСсылка() И СоздаватьЭлементЕслиНеНайденРелизПлатформы Тогда
		ТекущийРелизПлатформы = Справочники.РелизыТехнологическойПлатформы.СоздатьЭлемент();
		ТекущийРелизПлатформы.Наименование = ИнформацияПоТекущемуРелизуПлатформы.НомерРелизаПлатформы;
		ТекущийРелизПлатформы.Каталог = ИнформацияПоТекущемуРелизуПлатформы.КаталогРелизаПлатформы;
		ТекущийРелизПлатформы.ТипCOMСоединителя = Справочники.РелизыТехнологическойПлатформы.ОпределитьТипCOMСоединителяПоНомеруПлатформы(ТекущийРелизПлатформы.Наименование);
		ТекущийРелизПлатформы.Записать();
	КонецЕсли;
		
	ИнформацияПоТекущемуРелизуПлатформы.Вставить("ТекущийРелизПлатформы", ТекущийРелизПлатформы.Ссылка);	
	
	Возврат ИнформацияПоТекущемуРелизуПлатформы;
	
КонецФункции
