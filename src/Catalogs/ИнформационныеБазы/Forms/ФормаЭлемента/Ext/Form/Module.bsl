
&НаСервере
//
//
Процедура РелизОбновленияПриИзмененииСервер()
	Если ЗначениеЗаполнено(Объект.РелизОбновления) Тогда 
		Объект.ВидКонфигурации = Объект.РелизОбновления.ВидКонфигурации;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//
//
Процедура УправлениеЭлементамиФормы()
	ТекущийОбъект = ЭтаФорма.Объект;
	
	ЭтоФайловаяБаза = (ТекущийОбъект.ТипИБ = ПредопределенноеЗначение("Перечисление.ТипыИБ.Файловая"));	
	Элементы.СерверИБ.Доступность = НЕ ЭтоФайловаяБаза;		
	Элементы.ИмяКаталогИБ.Заголовок = ?(ЭтоФайловаяБаза, "Каталог ИБ", "Имя ИБ");
	Элементы.ИмяКаталогИБ.КнопкаВыбора = ЭтоФайловаяБаза;
	Элементы.ИмяКаталогИБ.КнопкаОткрытия = ЭтоФайловаяБаза;
	Элементы.ПараметрыSQL.Видимость = НЕ ЭтоФайловаяБаза;
	
	Элементы.ХранитьВБазеСсылкиНаВнешниеФайлыАрхивов.Доступность = ТекущийОбъект.ПереопределитьГлобальныеПараметрыДействийСАрхивами;
	Элементы.ВариантХраненияФайлаАрхиваВБазе.Доступность = ТекущийОбъект.ПереопределитьГлобальныеПараметрыДействийСАрхивами;	
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ТипИБПриИзменении(Элемент)
	Объект.СерверИБ = "";
	УправлениеЭлементамиФормы();
КонецПроцедуры

&НаКлиенте
//
//
Процедура КаталогАрхиваНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);		
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;	
	ДиалогВыбораКаталога.Заголовок = "Выберите каталог для выгрузки архивов";
	ДиалогВыбораКаталога.Каталог = ЭтаФорма.Объект.КаталогАрхива;
	Если ДиалогВыбораКаталога.Выбрать() Тогда
		ЭтаФорма.Объект.КаталогАрхива = ДиалогВыбораКаталога.Каталог;		
		ЭтаФорма.ОбновитьОтображениеДанных();
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
//
//
Процедура КаталогАрхиваSQLНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);		
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;	
	ДиалогВыбораКаталога.Заголовок = "Выберите каталог для выгрузки архивов SQL";
	ДиалогВыбораКаталога.Каталог = ЭтаФорма.Объект.КаталогАрхива;
	Если ДиалогВыбораКаталога.Выбрать() Тогда
		ЭтаФорма.Объект.КаталогАрхива = ДиалогВыбораКаталога.Каталог;		
		ЭтаФорма.ОбновитьОтображениеДанных();
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//
//
Процедура ИмяКаталогИБНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;	
	ДиалогВыбораКаталога.Заголовок = "Выберите каталог ИБ";
	ДиалогВыбораКаталога.Каталог = ЭтаФорма.Объект.ИмяКаталогИБ;
	Если ДиалогВыбораКаталога.Выбрать() Тогда
		ЭтаФорма.Объект.ИмяКаталогИБ = ДиалогВыбораКаталога.Каталог;				
		ЭтаФорма.ОбновитьОтображениеДанных();
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеЭлементамиФормы();
КонецПроцедуры

&НаКлиенте
//
//
Процедура РелизОбновленияПриИзменении(Элемент)
	РелизОбновленияПриИзмененииСервер();
КонецПроцедуры

&НаКлиенте
//
//
Процедура КаталогАрхиваОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение(ЭтаФорма.Объект.КаталогАрхива);
КонецПроцедуры

&НаКлиенте
Процедура КаталогАрхиваSQLОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение(ЭтаФорма.Объект.КаталогАрхиваSQL);
КонецПроцедуры

&НаКлиенте
//
//
Процедура ИмяКаталогИБОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение(ЭтаФорма.Объект.ИмяКаталогИБ);
КонецПроцедуры

&НаКлиенте
//
//
Процедура УстановленаБлокировкаCеансовПриИзменении(Элемент)
	Если Объект.УстановленаБлокировкаCеансов = Истина Тогда 
		Объект.УстановленаБлокировкаCеансов = Ложь;
		ОбщегоНазначенияСервер.ВывестиСообщение("Устанавливать значение данного параметра в значение ИСТИНА в интерактивном режиме запрещено!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//
//
Процедура ВыполняетсяОбработкаПриИзменении(Элемент)
	Если Объект.ВыполняетсяОбработка Тогда 
		Объект.ВыполняетсяОбработка = Ложь;
		ОбщегоНазначенияСервер.ВывестиСообщение("Устанавливать значение данного параметра в значение ИСТИНА в интерактивном режиме запрещено!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//
//
Процедура ВыполнятьЗапускОбработкиОбновленияИБПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Обработчик) Тогда
		ОбщегоНазначенияСервер.ВывестиСообщение("Внимание! Включение данной опции может привести к не корректному выполнению процедуры обновления информационных баз!" 
		+ Символы.ПС + "Рекоммендуется устанавливать опцию только для типовых конфигураций, корректно обрабатывающих вызов:"
		+ Символы.ПС + ЗадачиНаСервере.ПолучитьЗначениеРеквизита(Объект.Обработчик, "КодОбработчика"));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//
//
Процедура УстановленаБлокировкаРегламентныхЗаданийПриИзменении(Элемент)
	Если Объект.УстановленаБлокировкаРегламентныхЗаданий = Истина Тогда 
		Объект.УстановленаБлокировкаРегламентныхЗаданий = Ложь;
		ОбщегоНазначенияСервер.ВывестиСообщение("Устанавливать значение данного параметра в значение ИСТИНА в интерактивном режиме запрещено!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//
//
Процедура ПользовательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура;
	Отбор.Вставить("ТипУчетнойЗаписи", ПредопределенноеЗначение("Перечисление.ТипыУчетныхЗаписей.УчетнаяЗаписьИБ"));
	
	ОткрытьФорму("Справочник.УчетныеЗаписи.ФормаВыбора", Новый Структура("Отбор", Отбор), ЭтаФорма,,,,
	Новый ОписаниеОповещения("ПользовательНачалоВыбораОписаниеОповещения", ЭтаФорма), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ПользовательНачалоВыбораОписаниеОповещения(РезультатОповещения, ПараметрыОповещения) Экспорт

	Если НЕ ЗначениеЗаполнено(РезультатОповещения) Тогда Возврат; КонецЕсли;
	
	Объект.Пользователь = РезультатОповещения;
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ОтключитьПроверкуСоответствияРелизовПриИзменении(Элемент)
	Если Объект.ОтключитьПроверкуСоответствияРелизов Тогда 		
		ОбщегоНазначенияСервер.ВывестиСообщение("Установка данного параметра отключает проверку соответствия релизов обновлений по UpdInfo.txt" + Символы.ПС + "Использование рекурсивной установки обновлений в данном режиме невозможно!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//
//
Процедура ПереопределитьГлобальныеПараметрыДействийСАрзивамиПриИзменении(Элемент)
	УправлениеЭлементамиФормы();
КонецПроцедуры

&НаКлиенте
Процедура АвтоматическоеПодключениеКХранилищуПриЗапускеКонфигуратораПриИзменении(Элемент)
	Если Объект.АвтоматическоеПодключениеКХранилищуПриЗапускеКонфигуратора И НЕ ЗначениеЗаполнено(Объект.ХранилищеКонфигураций) Тогда
		Объект.АвтоматическоеПодключениеКХранилищуПриЗапускеКонфигуратора = Ложь;
		ПоказатьПредупреждение(, "Не заданы параметры подключения к хранилищу!", ,"Опция не может быть активирована");
	КонецЕсли;
КонецПроцедуры
