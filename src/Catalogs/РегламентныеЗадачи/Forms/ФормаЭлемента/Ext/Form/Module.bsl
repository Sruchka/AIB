
&НаСервере
//
//
Процедура ВыполнитьСохранение()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	ТекущийОбъект.Записать();
	ЗначениеВРеквизитФормы(ТекущийОбъект, "Объект");
	
	ЭтаФорма.Прочитать();	
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ОткрытьНастройкуРегламентногоЗадания(Команда)
	
	Если ЭтаФорма.Модифицированность ИЛИ Объект.Ссылка.Пустая() Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ОписаниеОповещенияОбработкаСохранения", ЭтаФорма), "Для продолжения необходимо сохранить текущую запись. Сохранить?", РежимДиалогаВопрос.ДаНет);
	Иначе
		ОткрытьРегламентноеЗаданиеПослеСохранения();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ОписаниеОповещенияОбработкаСохранения(РезультатОповещения, ПараметрыОповещения) Экспорт	
	
	Если РезультатОповещения = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьСохранение();
	
	ОткрытьРегламентноеЗаданиеПослеСохранения();
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ОткрытьРегламентноеЗаданиеПослеСохранения()
	
	Если НЕ Объект.Ссылка.Пустая() Тогда
		
		ТекущийДиалог = Новый ДиалогРасписанияРегламентногоЗадания(ОбновитьРасписаниеРегламентногоЗаданияНаСервере());
		ТекущийДиалог.Показать(Новый ОписаниеОповещения("ОбновитьРасписаниеРегламентногоЗадания", ЭтаФорма));
		
	Иначе 
		
		ПоказатьПредупреждение(, "Регламентное задание недоступно! Сохраните текущую запись справочника.");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ОбновитьРасписаниеРегламентногоЗадания(Расписание = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	ОбновитьРасписаниеРегламентногоЗаданияНаСервере(Расписание);
	
КонецПроцедуры

&НаСервере
//
//
Функция ОбновитьРасписаниеРегламентногоЗаданияНаСервере(Расписание = Неопределено)
	
	Возврат Справочники.РегламентныеЗадачи.ОбновитьРасписаниеРегламентногоЗадния(Объект.Ссылка ,Расписание);
	
КонецФункции

&НаКлиенте
//
//
Процедура УправлениеЭлементамиФормы()
	
	Элементы.ФормаОткрытьНастройкуРегламентногоЗадания.Доступность = (ОбновитьРасписаниеРегламентногоЗаданияНаСервере() = Неопределено);
	
КонецПроцедуры

&НаСервере
//
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
КонецПроцедуры

&НаСервере
//
//
Функция ОбновитьЗначениеПараметровОбработки(НовыеПараметрыОбработки = Неопределено)
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	Если НовыеПараметрыОбработки <> Неопределено И ТипЗнч(НовыеПараметрыОбработки) = Тип("Массив") Тогда
		
		ТекущийОбъект.ПараметрыОбработки = Новый ХранилищеЗначения(НовыеПараметрыОбработки, Новый СжатиеДанных(9));
		ТекущийОбъект.ВидОбработки = НовыеПараметрыОбработки[0].ВидОбработки;
		ТекущийОбъект.Записать();
		ЗначениеВРеквизитФормы(ТекущийОбъект, "Объект");
		
	КонецЕсли;
	
	Возврат ТекущийОбъект.ПараметрыОбработки.Получить();
КонецФункции

&НаКлиенте
//
//
Процедура ОткрытьПараметрыОбработки(Команда)
	
	Если ЭтаФорма.Модифицированность ИЛИ Объект.Ссылка.Пустая() Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ОписаниеОповещенияОткрытьПараметрыОбработки", ЭтаФорма), "Для продолжения необходимо сохранить текущую запись. Сохранить?", РежимДиалогаВопрос.ДаНет);
	Иначе
		ОписаниеОповещенияОткрытьПараметрыОбработки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ОписаниеОповещенияОткрытьПараметрыОбработки(РезультатОповещения = Неопределено, ПараметрыОповещения = Неопределено) Экспорт
	
	Если РезультатОповещения = КодВозвратаДиалога.Нет Тогда
		Возврат;	
	КонецЕсли;
	
	ВыполнитьСохранение();
	
	НовыеПараметрыОбработки = ОткрытьФормуМодально("Обработка.ГрупповаяОбработка.Форма.Форма", Новый Структура("РежимВыбораПараметровОбработки, МассивПараметрыОбработки", Истина, ОбновитьЗначениеПараметровОбработки()), ЭтаФорма);	
	Если НовыеПараметрыОбработки <> Неопределено Тогда
		
		ОбновитьЗначениеПараметровОбработки(НовыеПараметрыОбработки);
		
	КонецЕсли;
	
КонецПроцедуры
