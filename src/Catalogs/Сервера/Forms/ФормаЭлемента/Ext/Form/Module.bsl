
&НаКлиенте
//
//
Процедура УправлениеЭлементамиФормы()
	
	ЭтоСервер1С = (Объект.ТипСервера = ПредопределенноеЗначение("Перечисление.ТипыСерверов.Сервер1С"));
	ЭтоХранилищеКонфигураций = (Объект.ТипСервера = ПредопределенноеЗначение("Перечисление.ТипыСерверов.ХранилищеКонфигураций"));
	
	Элементы.ПортСервера.Видимость = ЭтоСервер1С;
	Элементы.ПортСервера.Доступность = ЭтоСервер1С;
	Элементы.ПортКластера.Видимость = ЭтоСервер1С;
	Элементы.ПортКластера.Доступность = ЭтоСервер1С;
	Элементы.ПортСервераАдминистрирования.Видимость = ЭтоСервер1С;
	Элементы.ПортСервераАдминистрирования.Доступность = ЭтоСервер1С;
	
	Элементы.Каталог.Доступность = ЭтоХранилищеКонфигураций;
	Элементы.Каталог.Видимость = ЭтоХранилищеКонфигураций;	
	
	Элементы.Пользователь.Доступность = ЗначениеЗаполнено(Объект.ТипСервера);
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ТипСервераПриИзменении(Элемент)
	Объект.Пользователь = "";
	УправлениеЭлементамиФормы();
КонецПроцедуры

&НаКлиенте
//
//
Процедура ПользовательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ЭтоСервер1С", (Объект.ТипСервера = ПредопределенноеЗначение("Перечисление.ТипыСерверов.Сервер1С")));
	ПараметрыОповещения.Вставить("ЭтоСерверSQL", (Объект.ТипСервера = ПредопределенноеЗначение("Перечисление.ТипыСерверов.СерверSQL")));
	ПараметрыОповещения.Вставить("ЭтоХранилищеКонфигураций", (Объект.ТипСервера = ПредопределенноеЗначение("Перечисление.ТипыСерверов.ХранилищеКонфигураций")));
	
	ТипУчетнойЗаписи = "";
	ТипСервера = Объект.ТипСервера;
	Если ПараметрыОповещения.ЭтоСервер1С Тогда
		ТипУчетнойЗаписи = ПредопределенноеЗначение("Перечисление.ТипыУчетныхЗаписей.УчетнаяЗаписьСервера1С");
	ИначеЕсли ПараметрыОповещения.ЭтоСерверSQL Тогда
		ТипУчетнойЗаписи = ПредопределенноеЗначение("Перечисление.ТипыУчетныхЗаписей.УчетнаяЗаписьSQL");
	ИначеЕсли ПараметрыОповещения.ЭтоХранилищеКонфигураций Тогда
		ТипУчетнойЗаписи = ПредопределенноеЗначение("Перечисление.ТипыУчетныхЗаписей.УчетнаяЗаписьХранилищаКонфигураций");
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("ТипУчетнойЗаписи", ТипУчетнойЗаписи);
	
	ОткрытьФорму("Справочник.УчетныеЗаписи.ФормаВыбора", Новый Структура("Отбор", Отбор), ЭтаФорма,,,,
	Новый ОписаниеОповещения("ПользовательНачалоВыбораОписаниеОповещения", ЭтаФорма, ПараметрыОповещения), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ПользовательНачалоВыбораОписаниеОповещения(РезультатОповещения, ПараметрыОповещения) Экспорт

	Если НЕ ЗначениеЗаполнено(РезультатОповещения) Тогда Возврат; КонецЕсли;
	
	Если ПараметрыОповещения.ЭтоХранилищеКонфигураций И ЗадачиНаСервере.ПолучитьЗначениеРеквизита(РезультатОповещения, "АвторизацияWindows") Тогда ОбщегоНазначенияСервер.ВывестиСообщение("Для доступа к хранилищу необходимо выбрать учетную запись без использования Windows-аутентификации!"); Возврат; КонецЕсли;
	
	Объект.Пользователь = РезультатОповещения;
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ПриОткрытии(Отказ)
	УправлениеЭлементамиФормы();
КонецПроцедуры                                                 

&НаКлиенте
//
//
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ЭтоСервер1С = (Объект.ТипСервера = ПредопределенноеЗначение("Перечисление.ТипыСерверов.Сервер1С"));
	ЭтоХранилищеКонфигураций = (Объект.ТипСервера = ПредопределенноеЗначение("Перечисление.ТипыСерверов.ХранилищеКонфигураций"));
	
	Если ЭтоСервер1С И НЕ ЗначениеЗаполнено(Объект.ПортКластера) Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не указан порт кластера сервера 1С";
		Сообщение.Поле = "ПортКластера";		
		Сообщение.ПутьКДанным = "Объект";				
		Сообщение.Сообщить();
	КонецЕсли;
	
	Если ЭтоСервер1С И НЕ ЗначениеЗаполнено(Объект.ПортСервера) Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не указан порт сервера 1С";
		Сообщение.Поле = "ПортСервера";		
		Сообщение.ПутьКДанным = "Объект";				
		Сообщение.Сообщить();
	КонецЕсли;
	
	Если ЭтоХранилищеКонфигураций И НЕ ЗначениеЗаполнено(Объект.Каталог) Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не указан каталог хранилища конфигураций";
		Сообщение.Поле = "Каталог";		
		Сообщение.ПутьКДанным = "Объект";				
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура КаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;	
	ДиалогВыбораКаталога.Заголовок = "Выберите каталог обновления";
	ДиалогВыбораКаталога.Каталог = ЭтаФорма.Объект.Каталог;
	Если ДиалогВыбораКаталога.Выбрать() Тогда
		ЭтаФорма.Объект.Каталог = ДиалогВыбораКаталога.Каталог;		
		ЭтаФорма.ОбновитьОтображениеДанных();
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//
//
Процедура КаталогОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение(ЭтаФорма.Объект.Каталог);
КонецПроцедуры


&НаКлиенте
//
//
Процедура ПолучитьСкриптЗапускаRAS(Команда)
	ОткрытьФорму("Справочник.РелизыТехнологическойПлатформы.ФормаВыбора",, ЭтаФорма,,,, Новый ОписаниеОповещения("ОбработатьОповещениеПолучитьСкриптЗапускаRAS", ЭтаФорма), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
//
//
Процедура ОбработатьОповещениеПолучитьСкриптЗапускаRAS(РезультатОповещения, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(РезультатОповещения) Тогда
		
		ЗадачиНаКлиенте.ПоказатьТекстовуюИнформацию("Пример скрипта запуска RAS", ПолучитьСкриптЗапускаСлужбыRAS(Объект.Ссылка, РезультатОповещения));
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
//
//
Функция ПолучитьСкриптЗапускаСлужбыRAS(Сервер, РелизТехнологическойПлатформы)
	Возврат МенеджерRAS.ПолучитьСкриптЗапускаСлужбыRAS(Объект.Ссылка, РелизТехнологическойПлатформы)
КонецФункции

