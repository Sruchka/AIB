
&НаКлиенте
//
//
Процедура УправлениеВидимостьюЭлементовФормы()
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура АутентификацияСтандартнаяПриИзменении(Элемент)
	АутентификацияПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
//
//
Процедура АутентификацияОСПриИзменении(Элемент)
	АутентификацияПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
//
//
Процедура АутентификацияПриИзменении(Элемент)
	Если Элемент.Имя = "АутентификацияОС" Тогда
		ЭтаФорма.АутентификацияСтандартная = Ложь;
	Иначе
		ЭтаФорма.АутентификацияОС = Ложь;
	КонецЕсли;   	
	УправлениеВидимостьюЭлементовФормы();
КонецПроцедуры

&НаСервере
//
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЭтаФорма.Параметры <> Неопределено Тогда
		ЭтаФорма.ИнформационнаяБаза = ЭтаФорма.Параметры.ИнформационнаяБаза;
	КонецЕсли;
	ЭтаФорма.АутентификацияСтандартная = Истина;
	ЭтаФорма.ВидРежимаЗапуска = Перечисления.ВидыРежимовЗапуска.ВыбиратьАвтоматически;
КонецПроцедуры

&НаКлиенте
//
//
Процедура ПриОткрытии(Отказ)
	
	ОбновитьТаблицуДоступныхПользователей();
	
	УправлениеВидимостьюЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ОбновитьТаблицуДоступныхПользователей()
	
	ОбновитьТаблицуДоступныхПользователейНаСервере();
	
	Элементы.ПользовательИмя.СписокВыбора.Очистить();
	Для Каждого ТекущаяСтрокаДоступныеПользователи Из ЭтаФорма.ДоступныеПользователи Цикл
		Элементы.ПользовательИмя.СписокВыбора.Добавить(ТекущаяСтрокаДоступныеПользователи.Имя, ТекущаяСтрокаДоступныеПользователи.Имя);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
//
//
Процедура ОбновитьТаблицуДоступныхПользователейНаСервере()
	ПараметрыОбработки = ЗадачиНаСервере.ПолучитьСтруктуруПараметровОбработки(ЭтаФорма.ИнформационнаяБаза);
	ИнформационнаяБаза_ОбъектПодключения = ЗадачиНаСервере.СоздатьОбъектПодключения(ПараметрыОбработки);
		Если ИнформационнаяБаза_ОбъектПодключения = Неопределено Тогда
			ОбщегоНазначенияСервер.ВывестиСообщение(ПараметрыОбработки.ОписаниеОшибки);
		КонецЕсли;
	ПользователиИБ_ОбъектПодключения = ИнформационнаяБаза_ОбъектПодключения.ПользователиИнформационнойБазы;	
	МассивПользователей_ОбъектПодключения = ПользователиИБ_ОбъектПодключения.ПолучитьПользователей();		
	Для Каждого ТекущийПользовательИБ_ОбъектПодключения Из МассивПользователей_ОбъектПодключения Цикл		
		ДобавитьСтрокуПользователяВТаблицуОбработки(ИнформационнаяБаза, ИнформационнаяБаза_ОбъектПодключения, ТекущийПользовательИБ_ОбъектПодключения);
	КонецЦикла;	
	СортироватьТаблицуДоступныхПользователей();
КонецПроцедуры

&НаСервере
//
//
Процедура СортироватьТаблицуДоступныхПользователей() Экспорт
	ЭтаФорма.ДоступныеПользователи.Сортировать("Имя");
КонецПроцедуры

&НаСервере
//
//
Процедура ДобавитьСтрокуПользователяВТаблицуОбработки(пИнформационнаяБаза, ИнформационнаяБаза_ОбъектПодключения, ТекущийПользовательИБ_ОбъектПодключения, СтатусМодификации = Неопределено) Экспорт
	НоваяСтрокаДоступныеПользователи = ЭтаФорма.ДоступныеПользователи.Добавить();		
	НоваяСтрокаДоступныеПользователи.Имя = ТекущийПользовательИБ_ОбъектПодключения.Имя;
КонецПроцедуры

&НаКлиенте
//
//
Процедура ЗакрытьТекущуюФорму(ПодтверждениеВыбора = Ложь)
	ПараметрыОтвета = Неопределено;
	Если ПодтверждениеВыбора Тогда 
		ПараметрыОтвета = Новый Структура();
		ПараметрыОтвета.Вставить("Наименование", ЭтаФорма.ПользовательИмя);
		ПараметрыОтвета.Вставить("Пароль", ЭтаФорма.Пароль);
		ПараметрыОтвета.Вставить("КодБлокировкиСеансов", ЭтаФорма.КодБлокировкиСеансов);
		ПараметрыОтвета.Вставить("АвторизацияWindows", ЭтаФорма.АутентификацияОС);
		ПараметрыОтвета.Вставить("АутентификацияСтандартная", ЭтаФорма.АутентификацияСтандартная);
		ПараметрыОтвета.Вставить("ВидРежимаЗапуска", ЭтаФорма.ВидРежимаЗапуска);
	КонецЕсли;
	ЭтаФорма.Закрыть(ПараметрыОтвета);
КонецПроцедуры

&НаКлиенте
//
//
Процедура OK(Команда)
	Если НЕ ЗначениеЗаполнено(ЭтаФорма.ПользовательИмя) Тогда
		ОбщегоНазначенияСервер.ВывестиСообщение("Не выбран пользователь!");
		Возврат;
	КонецЕсли;
	ЗакрытьТекущуюФорму(Истина);
КонецПроцедуры

&НаКлиенте
//
//
Процедура Отмена(Команда)
	ЗакрытьТекущуюФорму(Ложь);
КонецПроцедуры
