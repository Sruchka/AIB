
&НаКлиенте
//
//
Процедура ВыгружатьАрхивПриИзменении(Элемент)
	УправлениеВидимостьюЭлементовФормы();
КонецПроцедуры

&НаКлиенте
//
//
Процедура OK(Команда)
	ЭтоГрупповаяОбработкаОбновлениеИБ = (ЭтаФорма.ВидыГрупповойОбработки = ПредопределенноеЗначение("Перечисление.ВидыГрупповойОбработки.ОбновлениеИБ"));
	ЭтоГрупповаяОбработкаОбновлениеИБИзХранилищаКонфигураций = (ЭтаФорма.ВидыГрупповойОбработки = ПредопределенноеЗначение("Перечисление.ВидыГрупповойОбработки.ОбновлениеИБИзХранилищаКонфигураций"));
	Если ЭтоГрупповаяОбработкаОбновлениеИБ И Не ЗначениеЗаполнено(РелизОбновления) Тогда
		ОбщегоНазначенияСервер.ВывестиСообщение("Не указан релиз обновления!");
		Возврат;
	ИначеЕсли ЭтоГрупповаяОбработкаОбновлениеИБИзХранилищаКонфигураций И Не ЗначениеЗаполнено(ХранилищеКонфигураций) Тогда
		ОбщегоНазначенияСервер.ВывестиСообщение("Не указано хранилище обновлений!");
		Возврат;
	КонецЕсли;
	ЗакрытьТекущуюФорму(Истина);
КонецПроцедуры

&НаКлиенте
//
//
Процедура Отмена(Команда)
	ЗакрытьТекущуюФорму(Ложь);
КонецПроцедуры

&НаКлиенте
//
//
Процедура РелизОбновленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьРелизОбновления();
КонецПроцедуры

&НаКлиенте
//
//
Процедура ВыбратьРелизОбновления()
	ПараметрыОбработки = ЗадачиНаСервере.ПолучитьСтруктуруПараметровОбработки(ИнформационнаяБаза);
	ПараметрыОбработки.Обработчик = ЭтаФорма.Обработчик;	
	ЗадачиНаКлиенте.ДиалогВыбораРелизаОбновления(ЭтаФорма, ПараметрыОбработки);
КонецПроцедуры

&НаКлиенте
//
//
Процедура ДиалогВыбораРелизаОбновления_ОбработкаОповещения(Результат, Параметры) Экспорт
	Если ЗначениеЗаполнено(Результат) Тогда
		ЭтаФорма.РелизОбновления = Результат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//
//
Процедура ПриОткрытии(Отказ)	
	АвтоматическиПерезаписыватьАрхив = ЗадачиНаСервере.ПолучитьЗначениеРеквизита(ИнформационнаяБаза, "АвтоматическиПерезаписыватьАрхив");
	Обработчик = ЗадачиНаСервере.ПолучитьЗначениеРеквизита(ИнформационнаяБаза, "Обработчик");
	
	#ЕСЛИ ВебКлиент ТОГДА
	#ИНАЧЕ
		ОткрыватьБазуПослеОбновления = ЗадачиНаСервере.ПолучитьЗначениеРеквизита(ИнформационнаяБаза, "ОткрыватьБазуПослеОбновления");
	#КОНЕЦЕСЛИ 
	
	ТихийРежим = Истина;
	ВыгружатьАрхив = Истина;
	
	УправлениеВидимостьюЭлементовФормы();
	
	ЭтоГрупповаяОбработкаОбновлениеИБ = (ЭтаФорма.ВидыГрупповойОбработки = ПредопределенноеЗначение("Перечисление.ВидыГрупповойОбработки.ОбновлениеИБ"));
	Если ЭтоГрупповаяОбработкаОбновлениеИБ Тогда 
		ВыбратьРелизОбновления();	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//
//
Процедура ЗакрытьТекущуюФорму(ПодтверждениеВыбора = Ложь)
	ПараметрыУстановкиОбновления = Неопределено;
	Если ПодтверждениеВыбора Тогда 
		ПараметрыУстановкиОбновления = Новый Структура();
		ПараметрыОбработки = ЗадачиНаСервере.ПолучитьСтруктуруПараметровОбработки(ИнформационнаяБаза);
		ЗаполнитьЗначенияСвойств(ПараметрыОбработки, ЭтаФорма);
		ПараметрыУстановкиОбновления.Вставить("ПараметрыОбработки", ПараметрыОбработки);
		ПараметрыУстановкиОбновления.Вставить("РелизОбновления", РелизОбновления);
		ПараметрыУстановкиОбновления.Вставить("ХранилищеОбновлений", ХранилищеКонфигураций);
		ПараметрыУстановкиОбновления.Вставить("ПользовательХранилища", ПользовательХранилища);
	КонецЕсли;
	ЭтаФорма.Закрыть(ПараметрыУстановкиОбновления);
КонецПроцедуры

&НаКлиенте
//
//
Процедура УправлениеВидимостьюЭлементовФормы()

	ЭтоГрупповаяОбработкаОбновлениеИБ = (ЭтаФорма.ВидыГрупповойОбработки = ПредопределенноеЗначение("Перечисление.ВидыГрупповойОбработки.ОбновлениеИБ"));
	
	Элементы.РелизОбновления.Доступность = ЭтоГрупповаяОбработкаОбновлениеИБ;
	Элементы.РелизОбновления.Видимость = ЭтоГрупповаяОбработкаОбновлениеИБ;
	
	ДопустимоИспользованиеПравилОбъединения = ОбщегоНазначенияСервер.ДопустимоИспользованиеПравилОбъединения(СокрЛП(ЗадачиНаСервере.ПолучитьЗначениеРеквизита(ИнформационнаяБаза, "РелизТехнологическойПлатформы")));
	Элементы.ПравилаОбъединения.Доступность = Элементы.РелизОбновления.Доступность И ДопустимоИспользованиеПравилОбъединения;
	Элементы.ПравилаОбъединения.Видимость = Элементы.РелизОбновления.Видимость И ДопустимоИспользованиеПравилОбъединения;
		
	Элементы.ХранилищеКонфигураций.Доступность = НЕ ЭтоГрупповаяОбработкаОбновлениеИБ;
	Элементы.ХранилищеКонфигураций.Видимость = НЕ ЭтоГрупповаяОбработкаОбновлениеИБ;
	
	Элементы.ПользовательХранилища.Доступность = НЕ ЭтоГрупповаяОбработкаОбновлениеИБ;
	Элементы.ПользовательХранилища.Видимость = НЕ ЭтоГрупповаяОбработкаОбновлениеИБ;
	
	Элементы.АвтоматическиПерезаписыватьАрхив.Доступность = ЭтаФорма.ВыгружатьАрхив;	
	
	#ЕСЛИ ВебКлиент ТОГДА
		Элементы.ОткрыватьБазуПослеОбновления.Доступность = Ложь;
	#КОНЕЦЕСЛИ 
	
КонецПроцедуры

&НаСервере
//
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЭтаФорма.Параметры <> Неопределено Тогда
		ЭтаФорма.ИнформационнаяБаза = ЭтаФорма.Параметры.ИнформационнаяБаза;
		ЭтаФорма.ВидыГрупповойОбработки = ЭтаФорма.Параметры.ВидыГрупповойОбработки;
		ЭтаФорма.ХранилищеКонфигураций = ЭтаФорма.ИнформационнаяБаза.ХранилищеКонфигураций;
		ХранилищеКонфигурацийПриИзмененииНаСервере()
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
//
//
Процедура ХранилищеКонфигурацийПриИзменении(Элемент)
	ХранилищеКонфигурацийПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
//
//
Процедура ХранилищеКонфигурацийПриИзмененииНаСервере()
	
	ПользовательХранилища = ИнформационнаяБаза.ПользовательХранилища;
	Если НЕ ЗначениеЗаполнено(ПользовательХранилища) И ЗначениеЗаполнено(ХранилищеКонфигураций) Тогда
		ПользовательХранилища = ХранилищеКонфигураций.Пользователь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
//
//
Процедура ПравилаОбъединенияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Отбор = Новый Структура("ОсновнаяКонфигурация, ВтораяКонфигурация", ЗадачиНаСервере.ПолучитьЗначениеРеквизита(ЭтаФорма.ИнформационнаяБаза, "РелизОбновления"), ЭтаФорма.РелизОбновления);
	ОткрытьФорму("Справочник.ПравилаОбъединения.ФормаВыбора", Новый Структура("Отбор", Отбор)
             ,,,,, Новый ОписаниеОповещения("ВыбратьПравилаОбъединенияСервер", ЭтаФорма), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
 КонецПроцедуры
 
 &НаСервере
//
//
Процедура ВыбратьПравилаОбъединенияСервер(РезультатОповещения, ПараметрыОповещения) Экспорт	
	
	Если НЕ ЗначениеЗаполнено(РезультатОповещения) Тогда 
		Возврат; 
	КонецЕсли;
	
	ПравилаОбъединения = РезультатОповещения;
	
КонецПроцедуры
