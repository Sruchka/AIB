
// Общий модуль
//

//
//
Функция ПроверитьНеобходимостьОбновленияИБ() Экспорт
	
	ВерсияКонфигурации = Метаданные.Версия;
	КонстантаВерсияКонфигурации = Константы.ВерсияПрограммы.Получить();
	
	Если НЕ ЗначениеЗаполнено(КонстантаВерсияКонфигурации) Тогда
		ОбновлениеВерсииКонфигурации.ЗаполнитьДанныеИБ();		
	ИначеЕсли ВерсияКонфигурации <> КонстантаВерсияКонфигурации Тогда
		ОбновлениеВерсииКонфигурации.ПереходНаНовуюВерсию(КонстантаВерсияКонфигурации, ВерсияКонфигурации);
	КонецЕсли;
	
	Если ВерсияКонфигурации <> КонстантаВерсияКонфигурации Тогда 
		Константы.ВерсияПрограммы.Установить(ВерсияКонфигурации);
	КонецЕсли;
	
	// создаем запись о новом релизе платформы, если ранее такого не существовало
	Справочники.РелизыТехнологическойПлатформы.ПолучитьИнформациюПоТекущемуРелизуПлатформы(Истина);
	
	Если БазаПустая() Тогда
		ОбработкаОповещенийССервераСервер.ОтправитьСообщениеССервера(Перечисления.ТипыОповещенийССервера.ВыполнитьКоманду, "ОткрытьФорму(""Обработка.Помощник.Форма.ПервыйЗапуск"")");
	КонецЕсли;
	
КонецФункции

//
//
Функция БазаПустая() Экспорт	
	
	// Заполняем предопределенные значения обработчиков
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(ИнформационныеБазы.Ссылка) КАК Количество
		|ИЗ
		|	Справочник.ИнформационныеБазы КАК ИнформационныеБазы";	
		
	Возврат (Запрос.Выполнить().Выгрузить()[0].Количество = 0);	
	
КонецФункции

//
//
Функция ЗаполнитьДанныеИБ() Экспорт	
	
	// Заполняем предопределенные значения обработчиков
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Обработчики.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Обработчики КАК Обработчики
		|ГДЕ
		|	Обработчики.Предопределенный";	
	Справочники.Обработчики.ВосстановитьЗаполнениеПредопределенныхЭлементов(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	// Устанавливаем константы по умолчанию
	Константы.ВариантХраненияФайлаАрхиваВБазе.Установить(Перечисления.ВариантыХраненияАрхиваВБазе.НеЗагружать);
	Константы.ХранитьВБазеСсылкиНаВнешниеФайлыАрхивов.Установить(Ложь);
	
КонецФункции

//
//
Функция ПереходНаНовуюВерсию(СтараяВерсия, НоваяВерсия) Экспорт
	
	РелизОбновления = "3.1";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда
		МассивОбработчиков = Новый Массив;
		МассивОбработчиков.Добавить(Справочники.Обработчики.ОбновлениеИББухгалтерия30);
		Справочники.Обработчики.ВосстановитьЗаполнениеПредопределенныхЭлементов(МассивОбработчиков);		
		НоваяВерсия = "3.2";
	КонецЕсли;
	
	РелизОбновления = "3.2";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнформационныеБазы.Ссылка
		|ИЗ
		|	Справочник.ИнформационныеБазы КАК ИнформационныеБазы";		
		РезультатЗапроса = Запрос.Выполнить();		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ИБОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			Попытка
				ИБОбъект.Записать();
			Исключение
			КонецПопытки;
		КонецЦикла;
		НоваяВерсия = "3.3";
	КонецЕсли;
	
	РелизОбновления = "3.3";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда
		ВыборкаСервера = Справочники.Сервера.Выбрать();
		Пока ВыборкаСервера.Следующий() Цикл
			Если ВыборкаСервера.ТипСервера = Перечисления.ТипыСерверов.Сервер1С И Найти(ВыборкаСервера.Наименование, ":") <> 0 Тогда
				СерверОбъект = ВыборкаСервера.ПолучитьОбъект();																	
				СерверОбъект.Записать();
			КонецЕсли;
		КонецЦикла;
		НоваяВерсия = "3.4";
	КонецЕсли;
	
	РелизОбновления = "3.4";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда
		МассивОбработчиков = Новый Массив;
		МассивОбработчиков.Добавить(Справочники.Обработчики.ОбновлениеИББухгалтерия30);
		Справочники.Обработчики.ВосстановитьЗаполнениеПредопределенныхЭлементов(МассивОбработчиков);		
		НоваяВерсия = "3.5";		
	КонецЕсли;
	
	РелизОбновления = "3.5";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда
		Справочники.Обработчики.ВосстановитьЗаполнениеПредопределенныхЭлементов();
		ВыборкаОбработчики = Справочники.Обработчики.Выбрать();
		Пока ВыборкаОбработчики.Следующий() Цикл
			Если Не ЗначениеЗаполнено(ВыборкаОбработчики.КонтекстИсполнения) Тогда
				ТекущийОбъект = ВыборкаОбработчики.ПолучитьОбъект();
				ТекущийОбъект.КонтекстИсполнения = Перечисления.КонтекстыИсполненияОбработчиков.КонтекстВнешнегоПодключения;
				ТекущийОбъект.Записать();
			КонецЕсли;
		КонецЦикла;
		НоваяВерсия = "3.6";		
	КонецЕсли;
	
	РелизОбновления = "3.6";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда
		Справочники.Обработчики.ВосстановитьЗаполнениеПредопределенныхЭлементов();		
		НоваяВерсия = "4.1";		
	КонецЕсли;
	
	РелизОбновления = "4.1";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Обработчики.Ссылка
		|ИЗ
		|	Справочник.Обработчики КАК Обработчики
		|ГДЕ
		|	Обработчики.ТипОбработчика = ЗНАЧЕНИЕ(Перечисление.ТипыОбработчиков.ПустаяСсылка)";		
		РезультатЗапроса = Запрос.Выполнить();		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ТекущийОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			Попытка
				ТекущийОбъект.ТипОбработчика = Перечисления.ТипыОбработчиков.Обработчик1СПредприятие;
				ТекущийОбъект.Записать();
			Исключение
			КонецПопытки;
		КонецЦикла;
		НоваяВерсия = "4.2";
	КонецЕсли;
	
	РелизОбновления = "4.2";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда
		
		ИнформацияПоТекущемуРелизуПлатформы = Справочники.РелизыТехнологическойПлатформы.ПолучитьИнформациюПоТекущемуРелизуПлатформы(Истина);
		
		Выборка = Справочники.ИнформационныеБазы.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(Выборка.РелизТехнологическойПлатформы) Тогда
				
				ТекущийОбъект = Выборка.ПолучитьОбъект();
				ТекущийОбъект.РелизТехнологическойПлатформы = ИнформацияПоТекущемуРелизуПлатформы.ТекущийРелизПлатформы;
				ТекущийОбъект.Записать();
				
			КонецЕсли;
			
		КонецЦикла;		
		
		НоваяВерсия = "5.0";		
	КонецЕсли;
	
	РелизОбновления = "5.0";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда
		
		ВыборкаОбработчики = Справочники.ИнформационныеБазы.Выбрать();
		Пока ВыборкаОбработчики.Следующий() Цикл
			Если Не ЗначениеЗаполнено(ВыборкаОбработчики.СтатусИнформационнойБазы) Тогда
				ТекущийОбъект = ВыборкаОбработчики.ПолучитьОбъект();
				ТекущийОбъект.СтатусИнформационнойБазы = Перечисления.СтатусыИнформационныхБаз.Рабочая;
				ТекущийОбъект.Записать();
			КонецЕсли;
		КонецЦикла;
		
		
		НоваяВерсия = "5.1";		
	КонецЕсли;
	
	РелизОбновления = "5.1";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда		
		// изменение данных не требуется		
		НоваяВерсия = "5.2";		
	КонецЕсли;
	
	РелизОбновления = "5.2";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда		
		// изменение данных не требуется		
		НоваяВерсия = "5.3";		
	КонецЕсли;
	
	РелизОбновления = "5.3";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда		
		// изменение данных не требуется     		
		НоваяВерсия = "5.4";		
	КонецЕсли;
	
	РелизОбновления = "5.4";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда		
		// изменение данных не требуется 
		
		ВыборкаВидыКонфигураций = Справочники.ВидыКонфигураций.Выбрать();
		Пока ВыборкаВидыКонфигураций.Следующий() Цикл
			
			ТекущийОбъект = ВыборкаВидыКонфигураций.ПолучитьОбъект();
			ТекущийОбъект.Записать();
			
		КонецЦикла;
		
		НоваяВерсия = "5.5";		
	КонецЕсли;
	
	РелизОбновления = "5.5";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда		
		// изменение данных не требуется     		
		НоваяВерсия = "5.6";		
	КонецЕсли;
	
	РелизОбновления = "5.6";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда		
		// изменение данных не требуется     		
		НоваяВерсия = "5.7";		
	КонецЕсли;
	
	РелизОбновления = "5.7";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда		
		// изменение данных не требуется     		
		НоваяВерсия = "5.8";		
	КонецЕсли;
	
	РелизОбновления = "5.8";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда		
		// изменение данных не требуется
		
		ВыборкаРелизыОбновлений = Справочники.РелизыОбновлений.Выбрать();
		Пока ВыборкаРелизыОбновлений.Следующий() Цикл
			
			ТекущийОбъект = ВыборкаРелизыОбновлений.ПолучитьОбъект();
			ТекущийОбъект.Записать();
			
		КонецЦикла;
		
		НоваяВерсия = "5.9";		
	КонецЕсли;
	
	РелизОбновления = "5.9";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда		
		// изменение данных не требуется     		
		НоваяВерсия = "6.0";		
	КонецЕсли;
	
	РелизОбновления = "6.0";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда		
		
		ВыборкаРегламентныеЗадачи = Справочники.РегламентныеЗадачи.Выбрать();
		Пока ВыборкаРегламентныеЗадачи.Следующий() Цикл
			
			ТекущийОбъект = ВыборкаРегламентныеЗадачи.ПолучитьОбъект();
			МассивПараметрыОбработки = ТекущийОбъект.ПараметрыОбработки.Получить();
			Для Каждого ТекущийЭлементМассивПараметрыОбработки Из МассивПараметрыОбработки Цикл
				Если НЕ ТекущийЭлементМассивПараметрыОбработки.Свойство("Обрабатывать") Тогда
					ТекущийЭлементМассивПараметрыОбработки.Вставить("Обрабатывать", Истина);	
				КонецЕсли;
			КонецЦикла;
			ТекущийОбъект.ПараметрыОбработки = Новый ХранилищеЗначения(МассивПараметрыОбработки, Новый СжатиеДанных(9));
			ТекущийОбъект.Записать();
			
		КонецЦикла;
		
		НоваяВерсия = "6.1";		
	КонецЕсли;
	
	РелизОбновления = "6.1";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда		
		// изменение данных не требуется     		
		НоваяВерсия = "6.2";		
	КонецЕсли;
	
	РелизОбновления = "6.2";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда				
				
		ВыборкаСервера = Справочники.Сервера.Выбрать();
		Пока ВыборкаСервера.Следующий() Цикл
			
			ТекущийОбъект = ВыборкаСервера.ПолучитьОбъект();
			ТекущийОбъект.ПортСервераАдминистрирования = 1545;
			ТекущийОбъект.Записать();
			
		КонецЦикла;
		
		НоваяВерсия = "6.3";		
	КонецЕсли;
	
	РелизОбновления = "6.3";
	Если НоваяВерсия >= РелизОбновления И СтараяВерсия < РелизОбновления Тогда				
						
		НоваяВерсия = "6.4";		
	КонецЕсли;
	
КонецФункции

//
//
Функция ЗагрузитьФайлССервера(Источник, Приемник) Экспорт
	
	Результат = Ложь;
	
	Попытка
		
		КопироватьФайл(Источник, Приемник);
		
		ФайлПриемник = Новый Файл(Приемник);
		Результат = ФайлПриемник.Существует();
			
	Исключение
	КонецПопытки;
		
	Возврат Результат;
	
КонецФункции

//
//
Функция ПроверитьНаличиеОбновлений() Экспорт
	
	ИмяВременногоФайлаМакета = "source";
	
	КаталогВременныхФайловМакета = КаталогВременныхФайлов();
	КаталогВременныхФайловМакета = КаталогВременныхФайловМакета + ?(Прав(КаталогВременныхФайловМакета, 1) = "\", "", "\");
	
	ДанныеМакета = ПолучитьОбщийМакет("ИсточникиОбновлений");	
	ДанныеМакета.Записать(КаталогВременныхФайловМакета + ИмяВременногоФайлаМакета);
	
	ВременныйФайлДанныхМакета = Новый ЧтениеТекста(КаталогВременныхФайлов() + ИмяВременногоФайлаМакета);
	ТекущийИсточник = ВременныйФайлДанныхМакета.ПрочитатьСтроку();
	Пока ТекущийИсточник <> Неопределено Цикл
		
		КаталогИсточник = ТекущийИсточник + "/download/project/aub/";	
		ИсточникИнформацияОбОбновлении = "1cv8.mft";
		
		КаталогПриемник = КаталогВременныхФайлов();
		КаталогПриемник = КаталогПриемник + ?(Прав(КаталогПриемник, 1) = "\", "", "\");
		
		КаталогПриемник = КаталогПриемник + "aub\";
		СоздатьКаталог(КаталогПриемник);
		
		ПриемникИнформацияОбОбновлении = ИсточникИнформацияОбОбновлении;
		
		Если ОбновлениеВерсииКонфигурации.ЗагрузитьФайлССервера(КаталогИсточник + ИсточникИнформацияОбОбновлении, КаталогПриемник + ПриемникИнформацияОбОбновлении) Тогда
			
			ИнформацияОбОбновлении = Справочники.РелизыОбновлений.Прочитать_1cv8_mft(КаталогПриемник);
			
			ТекущийРелиз = СокрЛП(Метаданные.Версия);		
			АктуальныйРелиз = "";
			
			Если ИнформацияОбОбновлении.Свойство("Version", АктуальныйРелиз) Тогда
				
				Если ОбщегоНазначенияСервер.ДополнитьНулямиЧисловыеЗначенияСтрокиРелиза(АктуальныйРелиз) > ОбщегоНазначенияСервер.ДополнитьНулямиЧисловыеЗначенияСтрокиРелиза(ТекущийРелиз) И Справочники.РелизыОбновлений.НайтиПоНаименованию(АктуальныйРелиз) = Справочники.РелизыОбновлений.ПустаяСсылка() Тогда
					
					ИсточникАктуальныйРелиз = "aub.cf";
					ПриемникАктуальныйРелиз = ИсточникАктуальныйРелиз;
					
					Если ОбновлениеВерсииКонфигурации.ЗагрузитьФайлССервера(КаталогИсточник + ИсточникАктуальныйРелиз, КаталогПриемник + ПриемникАктуальныйРелиз) Тогда
						
						НовыйЭлементАктуальныйРелиз = Справочники.РелизыОбновлений.СоздатьЭлемент();
						НовыйЭлементАктуальныйРелиз.Наименование = АктуальныйРелиз;
						НовыйЭлементАктуальныйРелиз.ВидКонфигурации = Справочники.ВидыКонфигураций.АдминистрированиеИнформационныхБаз;
						НовыйЭлементАктуальныйРелиз.Записать();
						
						НаборЗаписейАктуальныйРелиз = РегистрыСведений.ХранилищеРелизовОбновлений.СоздатьНаборЗаписей();
						НаборЗаписейАктуальныйРелиз.Отбор.РелизОбновления.Установить(НовыйЭлементАктуальныйРелиз.Ссылка);
						НоваяЗаписьАктуальныйРелиз = НаборЗаписейАктуальныйРелиз.Добавить();
						НоваяЗаписьАктуальныйРелиз.РелизОбновления = НовыйЭлементАктуальныйРелиз.Ссылка;
						НаборЗаписейАктуальныйРелиз.Записать(Истина);
						
						Если РегистрыСведений.ХранилищеРелизовОбновлений.ЗагрузитьДвоичныеДанныеАрхиваИзКаталога(НовыйЭлементАктуальныйРелиз.Ссылка, КаталогПриемник) Тогда
							
							
							ИсточникОписаниеРелиза = "readme.txt";
							ПриемникОписаниеРелиза = ИсточникОписаниеРелиза;
							
							ОписаниеРелиза = "";
							Если ОбновлениеВерсииКонфигурации.ЗагрузитьФайлССервера(КаталогИсточник + ИсточникОписаниеРелиза, КаталогПриемник + ПриемникОписаниеРелиза) Тогда
								
								ФайлОписаниеРелиза = Новый ЧтениеТекста(КаталогПриемник + ПриемникОписаниеРелиза);
								ОписаниеРелиза = ФайлОписаниеРелиза.Прочитать();
								ФайлОписаниеРелиза.Закрыть();
								
								Попытка
									УдалитьФайлы(КаталогПриемник + ПриемникОписаниеРелиза);
								Исключение
								КонецПопытки;
								
							КонецЕсли;						
							
							ТекстоваяИнформация = "
							|Приветствую!						
							|Выполнена загрузка нового релиза конфигурации <Администрирование информационных баз>.
							|Новый релиз <" + АктуальныйРелиз + "> доступен в справочнике <Релизы обновлений>.
							|При необходимости обновления, выгрузите двоичные данные релиза во внешний файл *.cf и загрузите изменения в конфигурацию."
							+ ?(ЗначениеЗаполнено(ОписаниеРелиза), Символы.ПС + "Описание изменений: " + ОписаниеРелиза, "");						
							
							ОбработкаОповещенийССервераСервер.ОтправитьСообщениеССервера(Перечисления.ТипыОповещенийССервера.ВывестиТекстовуюИнформацию, ТекстоваяИнформация);
							
						КонецЕсли;
						
						Попытка
							УдалитьФайлы(КаталогПриемник + ПриемникАктуальныйРелиз);
						Исключение
						КонецПопытки;
						
					КонецЕсли;			
					
				КонецЕсли;
				
			КонецЕсли;			
			
			Попытка
				УдалитьФайлы(КаталогПриемник + ПриемникИнформацияОбОбновлении);
			Исключение
			КонецПопытки;
			
		КонецЕсли;	
		
		ТекущийИсточник = ВременныйФайлДанныхМакета.ПрочитатьСтроку();
		
	КонецЦикла;
	
	Попытка
		ВременныйФайлДанныхМакета.Закрыть();
	Исключение
	КонецПопытки;
	
	Попытка
		УдалитьФайлы(КаталогВременныхФайловМакета + ИмяВременногоФайлаМакета);
	Исключение
	КонецПопытки;

	
КонецФункции

//
//
Функция ЗагрузитьОбновленияКонфигурацииАИБ() Экспорт 	
	
	Если ОбщегоНазначенияСервер.ДопустимоИспользованиеФайловыхЗаданий()Тогда		
		ФоновыеЗадания.Выполнить("ОбновлениеВерсииКонфигурации.ПроверитьНаличиеОбновлений", , "Проверка наличия обновлений АИБ");		
	Иначе
		ОбновлениеВерсииКонфигурации.ПроверитьНаличиеОбновлений();
	КонецЕсли;	
	
	Возврат Истина;
КонецФункции