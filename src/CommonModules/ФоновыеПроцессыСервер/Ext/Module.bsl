
// Общий модуль
//

&НаСервере
//
//
Функция ПроверкаАктивностиФоновогоЗадания(ЭтаФорма, Объект, КомандаДляВыполненияНаКлиенте = Неопределено) Экспорт
	
	Результат = Ложь;
	
	МассивДанныхФоновогоЗадания = ФоновыеПроцессыМенеджерСервер.ПроверкаАктивностиФоновогоЗаданияСервер(Объект.КлючФоновогоЗадания);
	
	Если КомандаДляВыполненияНаКлиенте = Неопределено Тогда КомандаДляВыполненияНаКлиенте = ""; КонецЕсли;
	
	Для Каждого СостояниеТекущегоЗадания Из МассивДанныхФоновогоЗадания Цикл
		
		ВременноеЗначениеКомандыДляКлиента = "";
		ФоновыеПроцессыСервер.ВыполнитьКоманду(СостояниеТекущегоЗадания.Команда, ЭтаФорма, Объект, ВременноеЗначениеКомандыДляКлиента);
		
		КомандаДляВыполненияНаКлиенте = КомандаДляВыполненияНаКлиенте + ВременноеЗначениеКомандыДляКлиента + Символы.ПС;
		
		Результат = Результат ИЛИ СостояниеТекущегоЗадания.Активно;
		
	КонецЦикла;
	
	Результат = Результат ИЛИ ЗначениеЗаполнено(Объект.КлючФоновогоЗадания);
	
	КомандаДляВыполненияНаКлиенте = КомандаДляВыполненияНаКлиенте + "ЭтаФорма.ОбновитьОтображениеДанных();
			|ЭтаФорма.УправлениеЭлементамиФормы();" + Символы.ПС;
			
	Если НЕ Результат Тогда		
		
		Объект.КлючФоновогоЗадания = "";
		Попытка
			Если ЗначениеЗаполнено(Объект.АдресВременногоХранилищаДляВнутреннегоОбмена) Тогда 
				УдалитьИзВременногоХранилища(Объект.АдресВременногоХранилищаДляВнутреннегоОбмена);
			КонецЕсли;
		Исключение
		КонецПопытки;
		
		Объект.АдресВременногоХранилищаДляВнутреннегоОбмена = "";
		
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаСервере
//
//
Процедура ВыполнитьКоманду(Команда, ЭтаФорма = Неопределено, Объект = Неопределено, КомандаДляВыполненияНаКлиенте = Неопределено) Экспорт
	
	Если ФоновыеПроцессыМенеджерСервер.ОпределитьВыполнитьКомандуНаСервере(Команда) Тогда
		Попытка				
			Выполнить(СтрЗаменить(Команда, ФоновыеПроцессыМенеджерСервер.ПрефиксИсполненияКомандыНаСервере(), ""));
		Исключение
			ОбщегоНазначенияСервер.ВывестиСообщение(ОписаниеОшибки());
		КонецПопытки;	
	Иначе 
		КомандаДляВыполненияНаКлиенте = Команда;
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
//
//
Процедура ФоновыйПроцессОбработкиПоЗагрузкеОбновлений(ПараметрыОбработки) Экспорт
	
	ТаблицаОбработки = ПараметрыОбработки.ДоступныеОбновления;
		
	ОбъектЗагрузкаОбновлений = Обработки.ЗагрузкаОбновлений.Создать();
	ОбъектЗагрузкаОбновлений.ВидыКонфигураций.Загрузить(ПараметрыОбработки.ВидыКонфигураций);
	ЗаполнитьЗначенияСвойств(ОбъектЗагрузкаОбновлений, ПараметрыОбработки);	
	
	НомерСтроки = 0;
	Для Каждого СтрокаДоступныхОбновлений Из ТаблицаОбработки Цикл		
		НомерСтроки = НомерСтроки + 1;	
		
		ПодписьИндикатора = "Загрузка данных: " + СтрокаДоступныхОбновлений.ВидКонфигурации + " " + СтрокаДоступныхОбновлений.НомерРелиза;
		
		// информация о ходе обновления
		ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(		
		НомерСтроки, 
		ПодписьИндикатора,
		"Объект.ИндикаторПроцесса = Объект.ИндикаторПроцесса + 1;
		|ЭтаФорма.Элементы.ИндикаторПроцесса.Заголовок = """ + ПодписьИндикатора + """;
		|Объект.ДоступныеОбновления[" + (НомерСтроки - 1)  + "].Загрузить = Ложь;");
				
		ОбъектЗагрузкаОбновлений.ДоступныеОбновления.Очистить();
		НоваяСтрокаОбработки = ОбъектЗагрузкаОбновлений.ДоступныеОбновления.Добавить();		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаОбработки, СтрокаДоступныхОбновлений);		
		ОбъектЗагрузкаОбновлений.ЗагрузитьОбновления();						
		
		СтрокаДоступныхОбновлений.Загрузить = Ложь;
		
	КонецЦикла;
	
	ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(		
				0, 
				"Обработка завершена",
				"Объект.КлючФоновогоЗадания = """";");
	
КонецПроцедуры

&НаСервере
//
//
Процедура ФоновыйПроцессОбработкиПоПроверкеНаличияОбновлений(ПараметрыОбработки) Экспорт
	
	ТаблицаОбработки = ПараметрыОбработки.ВидыКонфигураций;
		
	ОбъектЗагрузкаОбновлений = Обработки.ЗагрузкаОбновлений.Создать();	
	ЗаполнитьЗначенияСвойств(ОбъектЗагрузкаОбновлений, ПараметрыОбработки);	
	
	// информация о ходе обновления
	ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(	
	1, 
	"Загрузка списка доступных обновлений");
	
	Соединение = ОбъектЗагрузкаОбновлений.ПолучитьПодкючениеКРесурсу(ОбъектЗагрузкаОбновлений.ПолучитьИмяСервераОбновлений());
	СодержимоеСпискаОбновлений = ОбъектЗагрузкаОбновлений.ПолучитьСодержимоеСпискаОбновленийССервера(Соединение);	
	
	НомерСтроки = 0;	
	Для Каждого СтрокаВидыКонфигураций Из ТаблицаОбработки Цикл		
		НомерСтроки = НомерСтроки + 1;	
		
		ПодписьИндикатора = "Обработка данных: " + СтрокаВидыКонфигураций.ВидКонфигурации;		
		
		// информация о ходе обновления
		ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(		
		НомерСтроки, 
		ПодписьИндикатора,
		"Объект.ИндикаторПроцесса = Объект.ИндикаторПроцесса + 1;
		|ЭтаФорма.Элементы.ИндикаторПроцесса.Заголовок = """ + ПодписьИндикатора + """;");
				
		ОбъектЗагрузкаОбновлений.ВидыКонфигураций.Очистить();
		НоваяСтрокаОбработки = ОбъектЗагрузкаОбновлений.ВидыКонфигураций.Добавить();		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаОбработки, СтрокаВидыКонфигураций);		
		ОбъектЗагрузкаОбновлений.ПроверитьНаличиеОбновлений(Соединение, СодержимоеСпискаОбновлений, ПараметрыОбработки.КлючФоновогоЗадания, ПодписьИндикатора);
		
		Для Каждого СтрокаДоступныеОбновления Из ОбъектЗагрузкаОбновлений.ДоступныеОбновления Цикл
			НоваяСтрокаПараметрыОбработкиДоступныеОбновления = ПараметрыОбработки.ДоступныеОбновления.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаПараметрыОбработкиДоступныеОбновления, СтрокаДоступныеОбновления);
		КонецЦикла;
		
		ПоместитьВоВременноеХранилище(ПараметрыОбработки.ДоступныеОбновления, ПараметрыОбработки.АдресВременногоХранилищаДляВнутреннегоОбмена);
		 
		// информация о ходе обновления
		ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(		
		НомерСтроки, 
		ПодписьИндикатора,		
		ФоновыеПроцессыМенеджерСервер.ПрефиксИсполненияКомандыНаСервере() + "Объект.ДоступныеОбновления.Загрузить(ПолучитьИзВременногоХранилища(Объект.АдресВременногоХранилищаДляВнутреннегоОбмена));");
		
	КонецЦикла;
	
	ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(		
				0, 
				"Обработка завершена",
				"Объект.КлючФоновогоЗадания = """";");
	
КонецПроцедуры

&НаСервере
//
//
Функция ФоновыйПроцессОбработкиПоИзменениюПользователяВБазах(ПараметрыОбработки) Экспорт
	
	ТаблицаОбработки = ПараметрыОбработки.ТаблицаОбработки;
		
	ОбъектЗагрузкаОбновлений = Обработки.УправлениеПользователямиВнешнихИнформационныхБаз.Создать();	
	ЗаполнитьЗначенияСвойств(ОбъектЗагрузкаОбновлений, ПараметрыОбработки);	
	ОбъектЗагрузкаОбновлений.ДоступныеПользователи.Загрузить(ПараметрыОбработки.ДоступныеПользователи);
	ОбъектЗагрузкаОбновлений.РолиПользователей.Загрузить(ПараметрыОбработки.РолиПользователей);
	ОбъектЗагрузкаОбновлений.ДоступныеРоли.Загрузить(ПараметрыОбработки.ДоступныеРоли);
	ОбъектЗагрузкаОбновлений.ДоступныеИнтерфейсы.Загрузить(ПараметрыОбработки.ДоступныеИнтерфейсы);
	ОбъектЗагрузкаОбновлений.ДоступныеЯзыки.Загрузить(ПараметрыОбработки.ДоступныеЯзыки);
	ОбъектЗагрузкаОбновлений.Обработчики.Загрузить(ПараметрыОбработки.Обработчики);
	
	// информация о ходе выполнения
	ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(	
	1, 
	"Обработка данных пользователя информационных баз");
	
	НомерСтроки = 0;	
	Для Каждого СтрокаТаблицаОбработки Из ТаблицаОбработки Цикл		
		НомерСтроки = НомерСтроки + 1;	
		
		ПодписьИндикатора = "Обработка данных: " + СтрокаТаблицаОбработки.ИнформационнаяБаза;		
		
		// информация о ходе выполнения
		ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(		
		НомерСтроки, 
		ПодписьИндикатора,
		"Объект.ИндикаторПроцесса = Объект.ИндикаторПроцесса + 1;
		|ЭтаФорма.Элементы.ИндикаторПроцесса.Заголовок = """ + ПодписьИндикатора + """;");
		
		ОбъектЗагрузкаОбновлений.ТаблицаОбработки.Очистить();
		НоваяСтрокаОбработки = ОбъектЗагрузкаОбновлений.ТаблицаОбработки.Добавить();		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаОбработки, СтрокаТаблицаОбработки);		
		ОбъектЗагрузкаОбновлений.ИзменитьПользователяВБазе(СтрокаТаблицаОбработки.ИнформационнаяБаза);
				
		ПоместитьВоВременноеХранилище(ОбъектЗагрузкаОбновлений.ДоступныеПользователи.Выгрузить(), ПараметрыОбработки.АдресВременногоХранилищаДляВнутреннегоОбмена);
		
	КонецЦикла;
	
	// информация о ходе выполнения
	ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(		
	НомерСтроки, 
	ПодписьИндикатора,
	ФоновыеПроцессыМенеджерСервер.ПрефиксИсполненияКомандыНаСервере() +
	"Объект.ДоступныеПользователи.Загрузить(ПолучитьИзВременногоХранилища(Объект.АдресВременногоХранилищаДляВнутреннегоОбмена));");
	
	ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(		
	0, 
	"Обработка завершена",		
	"Объект.ИмяСтарое = Объект.Имя;
	|Объект.КлючФоновогоЗадания = """";");
	
КонецФункции

&НаСервере
//
//
Функция ФоновыйПроцессОбработкиПоАнализМетаданныхИнформационныхБаз(ПараметрыОбработки) Экспорт
	
	ТаблицаОбработки = ПараметрыОбработки.ТаблицаОбработки;
	ДоступныеПользователи = ПараметрыОбработки.ДоступныеПользователи;
	РолиПользователей = ПараметрыОбработки.РолиПользователей;
	ДоступныеРоли = ПараметрыОбработки.ДоступныеРоли;
	ДоступныеИнтерфейсы = ПараметрыОбработки.ДоступныеИнтерфейсы;
	ДоступныеЯзыки = ПараметрыОбработки.ДоступныеЯзыки;
		
	ОбъектЗагрузкаОбновлений = Обработки.УправлениеПользователямиВнешнихИнформационныхБаз.Создать();	
	//ЗаполнитьЗначенияСвойств(ОбъектЗагрузкаОбновлений, ПараметрыОбработки);		
	ОбъектЗагрузкаОбновлений.ТаблицаОбработки.Загрузить(ТаблицаОбработки);
	
	ДоступныеПользователи.Очистить();
	РолиПользователей.Очистить();
	ДоступныеРоли.Очистить();
	ДоступныеИнтерфейсы.Очистить();
	ДоступныеЯзыки.Очистить();
	
	// информация о ходе выполнения
	ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(	
	1, 
	"Обработка данных пользователя информационных баз");
	
	НомерСтроки = 0;	
	Для Каждого СтрокаТаблицаОбработки Из ТаблицаОбработки Цикл		
		НомерСтроки = НомерСтроки + 1;	
		
		ПодписьИндикатора = "Обработка данных: " + СтрокаТаблицаОбработки.ИнформационнаяБаза;		
		
		// информация о ходе выполнения
		ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(		
		НомерСтроки, 
		ПодписьИндикатора,
		"Объект.ИндикаторПроцесса = Объект.ИндикаторПроцесса + 1;
		|ЭтаФорма.Элементы.ИндикаторПроцесса.Заголовок = """ + ПодписьИндикатора + """;");
		
		ОбъектЗагрузкаОбновлений.ТаблицаОбработки.Очистить();
		НоваяСтрокаОбработки = ОбъектЗагрузкаОбновлений.ТаблицаОбработки.Добавить();		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаОбработки, СтрокаТаблицаОбработки);		
		ОбъектЗагрузкаОбновлений.АнализМетаданныхИнформационныхБаз();
		
		
		ДоступныеПользователи = ОбщегоНазначенияСервер.ОбъединитьИдентичныеТаблицы(ДоступныеПользователи, ОбъектЗагрузкаОбновлений.ДоступныеПользователи);		
		
		РолиПользователей = ОбщегоНазначенияСервер.ОбъединитьИдентичныеТаблицы(РолиПользователей, ОбъектЗагрузкаОбновлений.РолиПользователей);
		//РолиПользователей.Свернуть("Имя, Идентификатор");
		
		ДоступныеРоли = ОбщегоНазначенияСервер.ОбъединитьИдентичныеТаблицы(ДоступныеРоли, ОбъектЗагрузкаОбновлений.ДоступныеРоли);
		ДоступныеРоли.Свернуть("Имя, Идентификатор");
		
		ДоступныеИнтерфейсы = ОбщегоНазначенияСервер.ОбъединитьИдентичныеТаблицы(ДоступныеИнтерфейсы, ОбъектЗагрузкаОбновлений.ДоступныеИнтерфейсы);		
		ДоступныеИнтерфейсы.Свернуть("Имя, Идентификатор");
		
		ДоступныеЯзыки = ОбщегоНазначенияСервер.ОбъединитьИдентичныеТаблицы(ДоступныеЯзыки, ОбъектЗагрузкаОбновлений.ДоступныеЯзыки);
		ДоступныеЯзыки.Свернуть("Имя, Идентификатор");
		
		СтруктураРезультат = Новый Структура("ДоступныеПользователи, РолиПользователей, ДоступныеРоли, ДоступныеИнтерфейсы, ДоступныеЯзыки"
		,ДоступныеПользователи.Скопировать()
		,РолиПользователей.Скопировать()
		,ДоступныеРоли.Скопировать()
		,ДоступныеИнтерфейсы.Скопировать()
		,ДоступныеЯзыки.Скопировать());
		
		ПоместитьВоВременноеХранилище(СтруктураРезультат, ПараметрыОбработки.АдресВременногоХранилищаДляВнутреннегоОбмена);
		
	КонецЦикла;
	
	// информация о ходе выполнения
	ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(		
	НомерСтроки, 
	ПодписьИндикатора,		
	ФоновыеПроцессыМенеджерСервер.ПрефиксИсполненияКомандыНаСервере() + 
	"СтруктураРезультат = ПолучитьИзВременногоХранилища(Объект.АдресВременногоХранилищаДляВнутреннегоОбмена);
	|Объект.ДоступныеПользователи.Загрузить(СтруктураРезультат.ДоступныеПользователи);
	|Объект.РолиПользователей.Загрузить(СтруктураРезультат.РолиПользователей);
	|Объект.ДоступныеРоли.Загрузить(СтруктураРезультат.ДоступныеРоли);
	|Объект.ДоступныеИнтерфейсы.Загрузить(СтруктураРезультат.ДоступныеИнтерфейсы);
	|Объект.ДоступныеЯзыки.Загрузить(СтруктураРезультат.ДоступныеЯзыки);
	|");
	
	ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(		
				0, 
				"Обработка завершена",
				"Объект.КлючФоновогоЗадания = """";");
	
КонецФункции

&НаСервере
//
//
Процедура ФоновыйПроцессОбработкиПоГрупповойОбработке(ПараметрыОбработки) Экспорт
	
	Если ПараметрыОбработки <> Неопределено И ТипЗнч(ПараметрыОбработки) = Тип("Массив") Тогда
		
		ОсталосьВыполнитьПроцессов = ПараметрыОбработки.Количество();
		
		Если ОсталосьВыполнитьПроцессов > 0 Тогда
			
			КоличествоПараллельныхПроцессов = ПараметрыОбработки[0].КоличествоПараллельныхПроцессов;
			КоличествоПараллельныхПроцессов = ?(КоличествоПараллельныхПроцессов <= 0, 1, КоличествоПараллельныхПроцессов);
			
			ИспользуютсяПараллельрныеПроцессы = (КоличествоПараллельныхПроцессов > 1);
			
			ТекущееКоличествоПараллельныхПроцессов = 0;			
			
			НомерСтроки = 0;
			МассивЗапущенныхПроцессов = Новый Массив;
			Для Каждого ТекущаяПозицияВыполнения Из ПараметрыОбработки Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ТекущееКоличествоПараллельныхПроцессов = ТекущееКоличествоПараллельныхПроцессов + 1;
				
				ПодписьИндикатора = "Выполнение операции [" + ТекущаяПозицияВыполнения.ВидОбработки + "]" 
				+ ?(ИспользуютсяПараллельрныеПроцессы, "", ": " + ТекущаяПозицияВыполнения.ИнформационнаяБаза);
				
				// информация о ходе выполнения
				ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(		
				НомерСтроки, 
				ПодписьИндикатора,
				"Объект.ИндикаторПроцесса = Объект.ИндикаторПроцесса + 1;
				|ЭтаФорма.Элементы.ИндикаторПроцесса.Заголовок = """ + ПодписьИндикатора + """;
				|Объект.Список[" + (НомерСтроки - 1)  + "].Обрабатывать = Ложь;");
				
				ТекущиеПараметрыОбработки = Новый Массив;
				ТекущиеПараметрыОбработки.Добавить(Новый Структура(Новый ФиксированнаяСтруктура(ТекущаяПозицияВыполнения)));
				ТекущиеПараметрыОбработки[0].КоличествоПараллельныхПроцессов = 1;
				
				Если НЕ ИспользуютсяПараллельрныеПроцессы Тогда
					
					ФоновыйПроцессВыполнитьГрупповуюОбработку(ТекущиеПараметрыОбработки);
					ТекущееКоличествоПараллельныхПроцессов = 0;
					
				Иначе				
					
					ПараметрыПроцессаФоновогоЗадания = Новый Массив;;
					ПараметрыПроцессаФоновогоЗадания.Добавить(ТекущиеПараметрыОбработки);
					
					МассивЗапущенныхПроцессов.Добавить(
					ФоновыеЗадания.Выполнить("ФоновыеПроцессыСервер.ФоновыйПроцессВыполнитьГрупповуюОбработку", ПараметрыПроцессаФоновогоЗадания, , СокрЛП(ТекущаяПозицияВыполнения.ВидОбработки))
					);
					
					ОсталосьВыполнитьПроцессов = ОсталосьВыполнитьПроцессов - 1;
					
					Если ТекущееКоличествоПараллельныхПроцессов = КоличествоПараллельныхПроцессов ИЛИ ОсталосьВыполнитьПроцессов = 0 Тогда
						
						ФоновыеЗадания.ОжидатьЗавершения(МассивЗапущенныхПроцессов);
						
						ТекущееКоличествоПараллельныхПроцессов = 0;
						МассивЗапущенныхПроцессов.Очистить();
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;		
		
		КонецЕсли;
		
	КонецЕсли;
	
	ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(		
				0, 
				"Обработка завершена",
				"Объект.КлючФоновогоЗадания = """";");
	
КонецПроцедуры

&НаСервере
//
//
Процедура ФоновыйПроцессВыполнитьГрупповуюОбработку(ПараметрыОбработки) Экспорт
	
	ОбъектГрупповаяОбработка = Обработки.ГрупповаяОбработка.Создать();
	Обработки.ГрупповаяОбработка.ЗаполнитьЗначенияРезультатаВыбораПараметровОбработки(ОбъектГрупповаяОбработка, ПараметрыОбработки);		
	
	ТаблицаОбработки = ОбъектГрупповаяОбработка.Список.Выгрузить();
	
	Для Каждого ТекущаяСтрокаТаблицаОбработки Из ТаблицаОбработки Цикл		
		
		ОбъектГрупповаяОбработка.Список.Очистить();
		НоваяСтрокаОбъектГрупповаяОбработка = ОбъектГрупповаяОбработка.Список.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаОбъектГрупповаяОбработка, ТекущаяСтрокаТаблицаОбработки);
		
		ОбъектГрупповаяОбработка.ВыполнитьОбработку();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
//
//
Процедура ФоновыйПроцессПолучитьТаблицуАктивныхСоединений(ПараметрыОбработки) Экспорт
	
	ТаблицаОбработки = ПараметрыОбработки.ТаблицаОбработки;
	
	ОбъектАктивныеСоединения = Обработки.АктивныеСоединения.Создать();
	АктивныеСоединения = ОбъектАктивныеСоединения.АктивныеСоединения.Выгрузить();
	
	ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(	
	1, 
	"Получение активных сеансов");
	
	НомерСтроки = 0;
	Для Каждого ТекущаяСтрокаТаблицаОбработки Из ТаблицаОбработки Цикл
		НомерСтроки = НомерСтроки + 1;	
		
		ПодписьИндикатора = "Обработка данных: " + ТекущаяСтрокаТаблицаОбработки.ИнформационнаяБаза;
		
		// информация о ходе выполнения
		ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(		
		НомерСтроки, 
		ПодписьИндикатора,
		"Объект.ИндикаторПроцесса = Объект.ИндикаторПроцесса + 1;
		|ЭтаФорма.Элементы.ИндикаторПроцесса.Заголовок = """ + ПодписьИндикатора + """;");
		
		ОбъектАктивныеСоединения.ТаблицаОбработки.Очистить();
		НоваяСтрокаОбъектАктивныеСоединенияТаблицаОбработки = ОбъектАктивныеСоединения.ТаблицаОбработки.Добавить();
		НоваяСтрокаОбъектАктивныеСоединенияТаблицаОбработки.ИнформационнаяБаза  = ТекущаяСтрокаТаблицаОбработки.ИнформационнаяБаза;
		
		ОбъектАктивныеСоединения.ЗаполнитьТаблицуАктивныхСоединений();
		
		АктивныеСоединения = ОбщегоНазначенияСервер.ОбъединитьИдентичныеТаблицы(АктивныеСоединения, ОбъектАктивныеСоединения.АктивныеСоединения.Выгрузить()); 
		
		СтруктураРезультат = Новый Структура("АктивныеСоединения", АктивныеСоединения.Скопировать());
		ПоместитьВоВременноеХранилище(СтруктураРезультат, ПараметрыОбработки.АдресВременногоХранилищаДляВнутреннегоОбмена);
		
	КонецЦикла;
	
	// информация о ходе выполнения
	ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(		
	НомерСтроки, 
	ПодписьИндикатора,		
	ФоновыеПроцессыМенеджерСервер.ПрефиксИсполненияКомандыНаСервере() + 
	"СтруктураРезультат = ПолучитьИзВременногоХранилища(Объект.АдресВременногоХранилищаДляВнутреннегоОбмена);
	|Объект.АктивныеСоединения.Загрузить(СтруктураРезультат.АктивныеСоединения);
	|");
	
	ФоновыеПроцессыМенеджерСервер.ОтправитьСообщениеФоновогоПроцесса(		
				0, 
				"Обработка завершена",
				"Объект.КлючФоновогоЗадания = """";");

КонецПроцедуры
