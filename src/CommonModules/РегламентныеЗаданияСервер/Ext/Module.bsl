
// Общий модуль
//

//
//
Процедура ЗагрузкаОбновленийКонфигураций() Экспорт
	
	Если НЕ Константы.ЗагружатьРелизыОбновленийАвтоматически.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаЗагрузкаОбновлений = Обработки.ЗагрузкаОбновлений.Создать();
	ОбработкаЗагрузкаОбновлений.ЗагружатьРелизыОбновленийВХранилище = Константы.ЗагружатьРелизыОбновленийВХранилище.Получить();
	
	Если НЕ ЗначениеЗаполнено(Константы.КаталогОбновлений.Получить()) Тогда
		ЗаписьЖурналаРегистрации(ОбработкаЗагрузкаОбновлений.мИмяСобытияВЖурналеРегистрации +  "Регламентное задание загрузки обновлений не выполнено: не заполнен каталог обновлений", УровеньЖурналаРегистрации.Предупреждение);
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыКонфигураций.Ссылка КАК ВидКонфигурации
	|	ВидыКонфигураций.Редакция КАК Редакция
	|ИЗ
	|	Справочник.ВидыКонфигураций КАК ВидыКонфигураций
	|ГДЕ
	|	НЕ ВидыКонфигураций.ПометкаУдаления
	|	И НЕ ВидыКонфигураций.ОтчключитьАвтоматическуюЗагрузкуОбновлений";	
	
	ОбработкаЗагрузкаОбновлений.ВидыКонфигураций.Загрузить(Запрос.Выполнить().Выгрузить());
	ОбработкаЗагрузкаОбновлений.ПроверитьНаличиеОбновлений();
	ОбработкаЗагрузкаОбновлений.ЗагрузитьОбновления();
	
	// обновление АИБ
	ОбновлениеВерсииКонфигурации.ЗагрузитьОбновленияКонфигурацииАИБ();
	
КонецПроцедуры

//
//
Процедура РегламентнаяОработкаДанных(Ключ) Экспорт
	
	Если НЕ Константы.ВыполнятьРегламентнуюОбработкуДанных.Получить() Тогда
		Возврат;
	КонецЕсли;	
	
	МассивФоновыхЗаданий = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("Ключ, Состояние", СокрЛП(Ключ), СостояниеФоновогоЗадания.Активно));
	Если МассивФоновыхЗаданий.Количество() = 1 Тогда
		
		РегламентнаяОработкаДанныхФоновоеЗадание(Ключ);
		
	КонецЕсли;
	
КонецПроцедуры

//
//
Процедура РегламентнаяОработкаДанныхФоновоеЗадание(Ключ) Экспорт
	
	ИмяСобытияЖурналаРегистрации = Справочники.РегламентныеЗадачи.ТэгЖурналаРегистрации();
	
	ЭлементРегламентныеЗадачи = Справочники.РегламентныеЗадачи.ПолучитьСсылку(Новый УникальныйИдентификатор(СокрЛП(Ключ)));
	
	Если ЭлементРегламентныеЗадачи <> Справочники.РегламентныеЗадачи.ПустаяСсылка() Тогда
		
		ОбъектЭлементРегламентныеЗадачи = ЭлементРегламентныеЗадачи.ПолучитьОбъект();
		Если НЕ ОбъектЭлементРегламентныеЗадачи.ПометкаУдаления И ОбъектЭлементРегламентныеЗадачи.Включено Тогда
						
			ОбработкаГрупповаяОбработка = Неопределено;			
			
			МассивПараметрыОбработки = ОбъектЭлементРегламентныеЗадачи.ПараметрыОбработки.Получить();
			
			Если МассивПараметрыОбработки <>  Неопределено И ТипЗнч(МассивПараметрыОбработки) = Тип("Массив") Тогда 
				
				ОбработкаГрупповаяОбработка = Обработки.ГрупповаяОбработка.Создать();
				Обработки.ГрупповаяОбработка.ЗаполнитьЗначенияРезультатаВыбораПараметровОбработки(ОбработкаГрупповаяОбработка, МассивПараметрыОбработки);												
				ОбработкаГрупповаяОбработка.ВыполнитьОбработку();
				
				// для параллельного выполнения
				//ПараметрыФоновогоПроцесса = Новый Массив;
				//ПараметрыФоновогоПроцесса.Добавить(Обработки.ГрупповаяОбработка.СформироватьРезультатВыбораПараметровОбработки(ОбработкаГрупповаяОбработка));
				
				//ФоновыеЗадания.Выполнить("ФоновыеПроцессыСервер.ФоновыйПроцессОбработкиПоГрупповойОбработке", ПараметрыФоновогоПроцесса, Новый УникальныйИдентификатор, ОбработкаГрупповаяОбработка.мИмяСобытияВЖурналеРегистрации);
				
			Иначе
				
				ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка, ОбъектЭлементРегламентныеЗадачи, ЭлементРегламентныеЗадачи, "Ошибочные параметры обработки! Значение не заполнено или имеет неверный формат.");
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка, ,, "Не определена запись справочника <РегламентныеЗадания>! Возможно запись была удалена.");
		
	КонецЕсли;
	
КонецПроцедуры